@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.Owin;

<style>
    .ScrollableMenuStyle {
        position: absolute;
        margin-left: auto;
        margin-right: auto;
        overflow-y: auto;
        max-height: 600px;
    }
</style>

@{
    var menus = new[]
                {
                   new { Link="Dashboard", Controller="Dashboard", LinkText="Dashboard", Roles="CCO,PRO"  },
                   new { Link="Profile/MasterProfile/Index", Controller="MasterProfile", LinkText="Profile", Roles="PRO"  },
                   //new { Link="Profile/MasterProfile/Providers", Controller="MasterProfile", LinkText="Providers", Roles="ADM,CCO,CRA,TL,CCM,MGT,HR"  },
                   new { Link="Initiation/Provider", Controller="Provider", LinkText="Initiate Provider", Roles="HR,CCO,CCM"  },
                   new { Link="Profile/SearchProvider/SearchProvider", Controller="SearchProvider", LinkText="Search Provider", Roles="ADM,CCO,CRA"  },
                   new { Link="MasterDataNew", Controller="MasterDataNew", LinkText="Master Data", Roles="ADM,CCO"  },
                   new { Link="Profile/SearchProfile/SearchProfile", Controller="SearchProfile", LinkText="Manage Profile", Roles="ADM,CCO,CRA"  },
                   new { Link="Profile/PlanDetail/PlanDetail", Controller="PlanDetail", LinkText="Plan Details", Roles="ADM,CCO,CRA"  },
                   new { Link="Profile/Verification/Verification", Controller="Verification", LinkText="Verifications Links", Roles="ADM,CCO,CRA"  },
                   new { Link="Initiation/InitiateUser/Index", Controller="InitiateUser", LinkText="Manage Users", Roles="ADM"  },
                   new { Link="Profile/SearchProfileForTL/Index", Controller="SearchProfileForTL", LinkText="Search Provider", Roles="TL"  },
                };
}

<div id="sidemenu" class="navbar-default sidebar" role="navigation">
    <div class="sidebar-nav navbar-collapse">
        <ul class="nav ScrollableMenuStyle" id="side-menu">
            @if (HttpContext.Current.User.Identity.IsAuthenticated)
            {

                try
                {

                    var roles = Context.GetOwinContext().GetUserManager<ApplicationUserManager>().GetRoles(User.Identity.GetUserId());
                    //roles = (string[])Session["Roles"];

                    if (roles != null)
                    {
                        var links = from item in menus
                                    where item.Roles.Split(new String[] { "," }, StringSplitOptions.RemoveEmptyEntries)
                                    .Any(x => roles.Contains(x))
                                    select item;
                        foreach (var link in links)
                        {
                            <li class="@(ViewContext.RouteData.Values["controller"].Equals(link.Controller) ? "active" : "")">
                                <a href="~/@link.Link"><i class="fa fa-fw fa-user"></i>@link.LinkText</a>
                            </li>
                        }
                    }
                }
                catch (Exception ex)
                {

                }

            }


            <!-- only for prototype menu -->
            @*<li class="@(ViewContext.RouteData.Values["controller"].Equals("Initiation") ? "active" : "")">
                    <a href="~/Credentialing/Initiation/Index"><i class="fa fa-fw fa-comments"></i>Credentialing Initiation</a>
                </li>
                <li class="@(ViewContext.RouteData.Values["controller"].Equals("Initiation") ? "active" : "")">
                    <a href="~/Credentialing/Initiation/CredentialingList"><i class="fa fa-fw fa-users"></i>Credentialing List</a>
                </li>


                <li class="@(ViewContext.RouteData.Values["controller"].Equals("ReCredentialing") ? "active" : "")">
                    <a href="~/Credentialing/ReCredentialing/Index"><i class="fa fa-fw fa-comments"></i>Re-Credentialing Initiation</a>
                </li>
                <li class="@(ViewContext.RouteData.Values["controller"].Equals("ReCredentialing") ? "active" : "")">
                    <a href="~/Credentialing/ReCredentialing/List"><i class="fa fa-fw fa-users"></i>Re-Credentialing List</a>
                </li>

                <li class="@(ViewContext.RouteData.Values["controller"].Equals("DeCredentialing") ? "active" : "")">
                    <a href="~/Credentialing/DeCredentialing/Index"><i class="fa fa-fw fa-comments"></i>De-Credentialing Initiation</a>
                </li>
                <li class="@(ViewContext.RouteData.Values["controller"].Equals("DeCredentialing") ? "active" : "")">
                    <a href="~/Credentialing/DeCredentialing/List"><i class="fa fa-fw fa-users"></i>De-Credentialing List</a>
                </li>

                <li class="@(ViewContext.RouteData.Values["controller"].Equals("ProfileUpdates") ? "active" : "")">
                    <a href="~/Credentialing/ProfileUpdates/Index"><i class="fa fa-fw fa-user"></i>Profile Update/Renewals</a>
                </li>
                <!-- Credentialing Initiation -->
                <li>
                    <a href="~/Credentialing/CCM/Index">
                        <i class="fa fa-fw fa-user"></i>Credentialing Action List
                    </a>
                </li>
                <!-- Credentialing Initiation -->

                <li>
                    <a href="~/Credentialing/CnD/CredentialingAppointment">
                        <i class="fa fa-fw fa-user"></i>Credentialing Appointment
                    </a>
                </li>*@

            <!-- end of prototype menu -->


        </ul>

    </div>
    <!-- /.sidebar-collapse -->
</div>

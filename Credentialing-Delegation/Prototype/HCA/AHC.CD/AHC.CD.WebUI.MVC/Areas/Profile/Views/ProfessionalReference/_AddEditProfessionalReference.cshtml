@model AHC.CD.WebUI.MVC.Areas.Profile.Models.ProfessionalReference.ProfessionalReferenceViewModel

<fieldset>
    <legend>
        Professional Reference
    </legend>
    <form class="professionalReference">
        @Html.ValidationSummary(true, "", new { @class = "text-danger validSummary" })
        <div class="col-lg-12 zero-padding-left-right-div">

            <div class="col-md-12">
                <div class="col-lg-3 form-group">
                    @Html.LabelFor(p => p.Title, htmlAttributes: new { @class = "control-label small" })
                    <div>
                        @Html.EnumDropDownListFor(p => p.ProviderType, "-- select --", new { @class = "form-control input-sm", data_ng_model = "professionalReference.ProviderTypeVal" })
                    </div>

                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>

                <div class="col-lg-3 form-group">
                    @Html.LabelFor(p => p.FirstName, htmlAttributes: new { @class = "control-label small" })
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control input-sm", data_ng_model = "professionalReference.FirstName" })

                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>

                <div class="col-lg-3 form-group">
                    @Html.LabelFor(p => p.MiddleName, htmlAttributes: new { @class = "control-label small" })
                    @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control input-sm", data_ng_model = "professionalReference.MiddleName" })
                </div>

                <div class="col-lg-3 form-group">
                    @Html.LabelFor(p => p.LastName, htmlAttributes: new { @class = "control-label small" })
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control input-sm", data_ng_model = "professionalReference.LastName" })


                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

                </div>

            </div>

            <div class="col-md-12">
            @*<div class="col-lg-3 form-group">
                @Html.LabelFor(p => p.Email, htmlAttributes: new { @class = "control-label small" })
                <div>
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control input-sm", data_ng_model = "professionalReference.Email" })
                </div>
            </div>*@


            <div class="form-group col-md-3">
                @Html.LabelFor(p => p.UnitNumber, htmlAttributes: new { @class = "control-label small" })
                <div>
                    @Html.TextBoxFor(model => model.UnitNumber, new { @class = "form-control input-sm", data_ng_model = "professionalReference.UnitNumber" })
                    @Html.ValidationMessageFor(model => model.UnitNumber, "", new { @class = "text-danger" })
                </div>
            </div>
                <div class="form-group col-md-3">
                   <label class="control-label small">Suite/Building *</label>
                    <div>
                        @Html.TextBoxFor(model => model.Building, new { @class = "form-control input-sm", data_ng_model = "professionalReference.Building" })
                        @Html.ValidationMessageFor(model => model.Building, "", new { @class = "text-danger" })
                    </div>
                </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(p => p.Street, htmlAttributes: new { @class = "control-label small" })
                <div>
                    @Html.TextBoxFor(model => model.Street, new { @class = "form-control input-sm", data_ng_model = "professionalReference.Street" })
                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                </div>
            </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(p => p.Country, htmlAttributes: new { @class = "control-label small" })
                    <div>
                        <select class="form-control input-sm" disabled>
                            <option disabled selected>USA</option>
                        </select>
                    </div>
                </div>
          
        </div>

            <div class="col-md-12">
           
            <div class="form-group col-md-3">
                @Html.LabelFor(p => p.State, htmlAttributes: new { @class = "control-label small" })
                <div>
                    @Html.DropDownListFor(model => model.State, new[] { new SelectListItem { Value = "Florida", Text = "Florida" }, new SelectListItem { Value = "California", Text = "California" } }, "-- select --", new { @class = "form-control input-sm", data_ng_model = "professionalReference.State" })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(p => p.County, htmlAttributes: new { @class = "control-label small" })
                <div>
                    @Html.DropDownListFor(model => model.County, new[] { new SelectListItem { Value = "Columbia", Text = "Columbia" }, new SelectListItem { Value = "Putnam", Text = "Putnam" } }, "-- select --", new { @class = "form-control input-sm", data_ng_model = "professionalReference.County" })
                    @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(p => p.City, htmlAttributes: new { @class = "control-label small" })
                <div>
                    @Html.DropDownListFor(model => model.City, new[] { new SelectListItem { Value = "Spring Hill", Text = "Spring Hill" }, new SelectListItem { Value = "New York", Text = "New York" } }, "-- select --", new { @class = "form-control input-sm", data_ng_model = "professionalReference.City" })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(p => p.Zipcode, htmlAttributes: new { @class = "control-label small" })
                    <div>
                        @Html.TextBoxFor(model => model.Zipcode, new { @class = "form-control input-sm", data_ng_model = "professionalReference.Zipcode" })
                        @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
                    </div>
                </div>
        </div>

            <div class="col-md-12">
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label small" })
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control input-sm", data_ng_model = "professionalReference.Email" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(p => p.Telephone, htmlAttributes: new { @class = "control-label small" })
                <div>
                    <div class="input-group">
                        <div class="input-group-btn">
                            <button type="button" class="btn btn-sm"><span class="caret"></span></button>
                        </div>
                        <div class="popover fade bottom in" role="tooltip" id="countryDailCodeContainer">
                            <div class="arrow"></div>
                            <h3 class="popover-title">Select Country Dial Code</h3>
                            <div class="popover-content">
                                <select id="ContactContryCode">
                                    <option>+91</option>
                                </select>
                            </div>
                        </div>
                        @Html.TextBoxFor(model => model.Telephone, new { @class = "form-control input-sm", data_ng_model = "professionalReference.Telephone" })
                        @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(p => p.Fax, htmlAttributes: new { @class = "control-label small" })
                <div>
                    <div class="input-group">
                        <div class="input-group-btn">
                            <button type="button" class="btn btn-sm"><span class="caret"></span></button>
                        </div>
                        <div class="popover fade bottom in" role="tooltip" id="countryDailCodeContainer">
                            <div class="arrow"></div>
                            <h3 class="popover-title">Select Country Dial Code</h3>
                            <div class="popover-content">
                                <select id="ContactContryCode">
                                    <option>+91</option>
                                </select>
                            </div>
                        </div>
                        @Html.TextBoxFor(model => model.Zipcode, new { @class = "form-control input-sm", data_ng_model = "professionalReference.Fax" })
                    </div>
                </div>
            </div>
        </div>


            <div class="col-md-12">
                <div class="form-group col-md-3">

                    @Html.LabelFor(p => p.Degree, htmlAttributes: new { @class = "control-label small" })
                    <div>
                        @Html.DropDownListFor(model => model.Degree, new[] { new SelectListItem { Value = "Bachelor Degree", Text = "Bachelor Degree" }, new SelectListItem { Value = "Associate Degree", Text = "Associate Degree" } }, "-- select --", new { @class = "form-control input-sm", data_ng_model = "professionalReference.Degree" })

                        <div>
                            @Html.ValidationMessageFor(model => model.Degree, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>


                <div class="form-group col-md-3">
                    <label class="control-label small">Specialty</label>
                    <div>
                        @Html.DropDownListFor(model => model.Speciality, new[] { new SelectListItem { Value = "Dermatology", Text = "Dermatology" }, new SelectListItem { Value = "Cardialogy", Text = "Cardialogy" } }, "-- select --", new { @class = "form-control input-sm", data_ng_model = "professionalReference.Speciality" })
                    </div>
                </div>


                <div class="form-group col-md-3">
                    @Html.LabelFor(p => p.Relationship, htmlAttributes: new { @class = "control-label small" })
                    <div>

                        @Html.TextBoxFor(model => model.Relationship, new { @class = "form-control input-sm", data_ng_model = "professionalReference.Relationship" })
                    </div>
                </div>

                <div class="form-group col-md-3">

                    @Html.LabelFor(p => p.IsBoardCerified, htmlAttributes: new { @class = "control-label small" })
                    <div class="radio">
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.IsBoardCerified, new { name = "IBC", value = "true" }) Yes
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.IsBoardCerified, new { name = "IBC", value = "false" }) No
                        </label>
                    </div>
                </div>
            </div>

            <div class="col-md-12 form-group">
                <button type="button" class="btn btn-warning btn-sm" ng-click="cancelProfessionalReference()">Cancel</button>
                <button type="submit" class="btn btn-primary btn-sm pull-right" ng-click="saveProfessionalReference(professionalReference)">{{submitButtonText}}</button>
            </div>
        </div>
    </form>
    </fieldset>

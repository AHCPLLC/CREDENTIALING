@model AHC.CD.WebUI.MVC.Areas.Profile.Models.ProfessionalLiability.ProfessionalLiabilityInsuranceViewModel

<fieldset>
    <legend>
        Professional liability
    </legend>
    <form enctype="multipart/form-data">
        <div class="form-style">

            <div class="panel-body">

                <div class="col-md-12">
                    <div class="col-md-8 form-group">

                        @Html.LabelFor(p => p.InsuranceInfo.InsuranceCarrier, htmlAttributes: new { @class = "control-label small" })
                        @Html.DropDownListFor(model => model.InsuranceInfo.InsuranceCarrier, new[] { new SelectListItem { Value = "Mag Mutual Insurance Company", Text = "Mag Mutual Insurance Company" } }, "-- select --", new { @class = "form-control input-sm", data_ng_model = "professionalLiabilty.CarrierName" })

                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(p => p.InsuranceInfo.SelfInsured, htmlAttributes: new { @class = "control-label small" })
                        <div class="radio">
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.InsuranceInfo.SelfInsured, "Yes", new { data_ng_model = "professionalLiabilty.SelfInsured" }) Yes
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.InsuranceInfo.SelfInsured, "No", new { data_ng_model = "professionalLiabilty.SelfInsured" }) No
                            </label>
                        </div>
                    </div>

                </div>

                <div class="col-md-12">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(p => p.InsuranceAddress.Number, htmlAttributes: new { @class = "control-label small" })
                        <div>

                            @Html.TextBoxFor(model => model.InsuranceAddress.Number, new { @class = "form-control input-sm", data_ng_model = "professionalLiabilty.Number" })
                        </div>
                    </div>

                    <div class="form-group col-md-3">
                        @Html.LabelFor(p => p.InsuranceAddress.Building, htmlAttributes: new { @class = "control-label small" })
                        <div>

                            @Html.TextBoxFor(model => model.InsuranceAddress.Building, new { @class = "form-control input-sm", data_ng_model = "professionalLiabilty.Building" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(p => p.InsuranceAddress.Street, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.TextBoxFor(model => model.InsuranceAddress.Street, new { @class = "form-control input-sm", data_ng_model = "professionalLiabilty.Street" })
                        </div>
                    </div>

                    <div class="form-group col-md-3">

                        @Html.LabelFor(p => p.InsuranceAddress.Zipcode, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.TextBoxFor(model => model.InsuranceAddress.Zipcode, new { @class = "form-control input-sm", data_ng_model = "professionalLiabilty.Zipcode" })
                        </div>
                    </div>
                </div>


                <div class="col-md-12">
                    <div class="form-group col-md-3">

                        @Html.LabelFor(p => p.InsuranceAddress.Country, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.DropDownListFor(model => model.InsuranceAddress.Country, new[] { new SelectListItem { Value = "USA", Text = "USA" }, new SelectListItem { Value = "India", Text = "India" } }, "-- select --", new { @class = "form-control input-sm", data_ng_model = "professionalLiabilty.Country" })
                        </div>
                    </div>

                    <div class="form-group col-md-3">
                        @Html.LabelFor(p => p.InsuranceAddress.State, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.DropDownListFor(model => model.InsuranceAddress.State, new[] { new SelectListItem { Value = "Alabama", Text = "Alabama" }, new SelectListItem { Value = " Alaska", Text = " Alaska" } }, "-- select --", new { @class = "form-control input-sm", data_ng_model = "professionalLiabilty.State" })
                        </div>
                    </div>


                    <div class="form-group col-md-3">

                        @Html.LabelFor(p => p.InsuranceAddress.County, htmlAttributes: new { @class = "control-label small" })
                        <div>

                            @Html.DropDownListFor(model => model.InsuranceAddress.County, new[] { new SelectListItem { Value = "Graham", Text = "Graham" }, new SelectListItem { Value = "Arkansas", Text = "Arkansas" } }, "-- select --", new { @class = "form-control input-sm", data_ng_model = "professionalLiabilty.County" })
                        </div>
                    </div>

                    <div class="form-group col-md-3">

                        @Html.LabelFor(p => p.InsuranceAddress.City, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.DropDownListFor(model => model.InsuranceAddress.City, new[] { new SelectListItem { Value = "Birmingham", Text = "Birmingham" }, new SelectListItem { Value = "Los Angeles", Text = "Los Angeles" } }, "-- select --", new { @class = "form-control input-sm", data_ng_model = "professionalLiabilty.City" })
                        </div>
                    </div>

                </div>


                <div class="col-md-12">
                    <div class="col-md-3 form-group">

                        @Html.LabelFor(p => p.InsuranceInfo.OriginalEffectiveDate, htmlAttributes: new { @class = "control-label small" })

                        @Html.TextBoxFor(model => model.InsuranceInfo.OriginalEffectiveDate, new { type = "date", @class = "form-control input-sm", data_ng_model = "professionalLiabilty.OriginalEffectiveDate" })
                    </div>

                    <div class="col-md-3 form-group">

                        @Html.LabelFor(p => p.InsuranceInfo.EffectiveDate, htmlAttributes: new { @class = "control-label small" })

                        @Html.TextBoxFor(model => model.InsuranceInfo.EffectiveDate, new { type = "date", @class = "form-control input-sm", data_ng_model = "professionalLiabilty.EffectiveDate" })
                    </div>


                    <div class="col-md-3 form-group">

                        @Html.LabelFor(p => p.InsuranceInfo.ExpirationDate, htmlAttributes: new { @class = "control-label small" })

                        @Html.TextBoxFor(model => model.InsuranceInfo.ExpirationDate, new { type = "date", @class = "form-control input-sm", data_ng_model = "professionalLiabilty.ExpirationDate" })
                    </div>

                    <div class="form-group col-md-3">

                        @Html.LabelFor(p => p.InsuranceInfo.CoverageType, htmlAttributes: new { @class = "control-label small" })
                        <div class="radio">
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.InsuranceInfo.CoverageType, "Individual", new { data_ng_model = "professionalLiabilty.TypeOfCoverage" }) Individual
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.InsuranceInfo.CoverageType, "Shared", new { data_ng_model = "professionalLiabilty.TypeOfCoverage" }) Shared
                            </label>
                        </div>
                    </div>

                </div>


                <div class="col-md-12">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(p => p.InsuranceInfo.UnlimitedCoverageWithInsuranceCarrier, htmlAttributes: new { @class = "control-label small" })
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.InsuranceInfo.UnlimitedCoverageWithInsuranceCarrier, "Yes", new { data_ng_model = "professionalLiabilty. UnlimitedCoverage" })  Yes
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.InsuranceInfo.UnlimitedCoverageWithInsuranceCarrier, "No", new { data_ng_model = "professionalLiabilty. UnlimitedCoverage" })  No
                        </label>
                    </div>

                    <div class="form-group col-md-3">
                        <label class="control-label small">Amount Of Coverage Per Occurrence</label>

                        @Html.TextBoxFor(model => model.InsuranceInfo.AmountOfCoveragePerOccurance, new { type = "number", @class = "form-control input-sm", data_ng_model = "professionalLiabilty.AmountOfCoverageOcc" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(p => p.InsuranceInfo.AmountOfCoverageAggregate, htmlAttributes: new { @class = "control-label small" })

                        @Html.TextBoxFor(model => model.InsuranceInfo.AmountOfCoverageAggregate, new { type = "number", @class = "form-control input-sm", data_ng_model = "professionalLiabilty.AmountOfCoverageAgg" })
                    </div>
                    <div class="form-group col-md-3">

                        <label class="control-label small">Phone Number </label>


                        <input type="text" class="form-control input-sm" />


                    </div>
                </div>

                <div class="clearfix"></div><br>

                <div class="col-md-12">
                    <div class=" col-md-3 form-group">

                        @Html.LabelFor(p => p.InsuranceInfo.PolicyIncludesTailCoverage, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.InsuranceInfo.PolicyIncludesTailCoverage, "Yes", new { data_ng_model = "professionalLiabilty. TailCoverage" }) Yes
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.InsuranceInfo.PolicyIncludesTailCoverage, "No", new { data_ng_model = "professionalLiabilty. TailCoverage" }) No
                            </label>
                        </div>
                    </div>

                    <div class="col-md-3 form-group">
                        <div>

                            @Html.LabelFor(p => p.InsuranceInfo.PolicyNumber, htmlAttributes: new { @class = "control-label small" })

                            @Html.TextBoxFor(model => model.InsuranceInfo.PolicyNumber, new { type = "number", @class = "form-control input-sm", data_ng_model = "professionalLiabilty.PolicyNumber" })
                        </div>
                    </div>

                    <div class=" col-md-5 form-group">
                        <label></label>
                        <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                            <div class="form-control" data-trigger="fileinput"><i class="glyphicon glyphicon-file fileinput-exists"></i> <span class="fileinput-filename"></span></div>
                            <span class="input-group-addon btn btn-default btn-file"><span class="fileinput-new">Select Insurance Document</span><span class="fileinput-exists">Change</span><input type="file" name="..."></span>
                            <a href="#" class="input-group-addon btn btn-default fileinput-exists" data-dismiss="fileinput">Remove</a>
                        </div>
                    </div>
                    <br>
                    <div class="col-md-1 form-group">
                        <div>

                            <a ng-show="!newShowProfessionalLiabilty" href="{{professionalLiabilty.Certificate}}" class="pointer" target="_blank" data-toggle="tooltip" data-placement="top" title="Preview"><i class="fa fa-2x fa-file"></i></a>
                        </div>
                    </div>

                </div>
            </div>


            <div class="panel-body">
                <div class="col-md-12">


                </div>
                <div class="col-md-12">
                    <div class="form-group col-md-12">

                        @Html.LabelFor(p => p.InsuranceInfo.DeniedProffessionalLiabilityInsurance, htmlAttributes: new { @class = "control-label small" })
                        <div class="radio">
                            <label class="radio-inline">

                                @Html.RadioButtonFor(model => model.InsuranceInfo.DeniedProffessionalLiabilityInsurance, "Yes", new { data_ng_model = "professionalLiabilty.DeniedProfessionalInsurance", data_ng_click = "showDenied()" }) Yes
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.InsuranceInfo.DeniedProffessionalLiabilityInsurance, "No", new { data_ng_model = "professionalLiabilty.DeniedProfessionalInsurance", data_ng_click = "hideDenied()" }) No

                            </label>
                        </div>
                    </div>
                </div>

                <div class="col-md-12" ng-show="showInput">

                    <div class="form-group col-md-4">
                        <label class="control-label small">Insurance Carrier Name</label>
                        <input type="text" class="form-control input-sm" />
                    </div>

                    <div class="form-group col-md-4">

                        @Html.LabelFor(p => p.InsuranceInfo.DenialDate, htmlAttributes: new { @class = "control-label small" })
                        @Html.TextBoxFor(model => model.InsuranceInfo.DenialDate, new { type = "date", @class = "form-control input-sm", data_ng_model = "professionalLiabilty.InsuranceInfo.DenialDate" })
                    </div>

                    <div class="form-group col-md-4">

                        @Html.LabelFor(p => p.InsuranceInfo.DenialReason, htmlAttributes: new { @class = "control-label small" })
                        @Html.TextBoxFor(model => model.InsuranceInfo.DenialReason, new { @class = "form-control input-sm", data_ng_model = "professionalLiabilty.InsuranceInfo.DenialReason" })
                    </div>



                </div>

                <div class="col-md-12">


                </div>
            </div>

            <div class="col-md-12">
                <button class="btn btn-success btn-sm pull-right" ng-click="saveProfessionalLiabilty()">Save</button>
                <button class="btn btn-warning btn-sm pull-left" ng-click="cancelProfessionalLiabilty()">Cancel</button>
            </div>
        </div>
    </form>

</fieldset>

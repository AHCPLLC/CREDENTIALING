@model AHC.CD.WebUI.MVC.Areas.Profile.Models.IdentificationAndLicenses.StateLicenseViewModel

@*<script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>*@
<fieldset>
    <legend>
        State License Information
    </legend>
    <div class="col-md-12 text-right" style="font-style:italic;font-size:x-small;">
        <label>*Non-Licensed professionals should enter certification/registration number in the space provided for license number</label>
  
     </div>
    <div>
        <form class="stateLicenseForm">
            <div class="col-lg-12 zero-padding-left-right-div">
                <div class="col-md-12 form-group">

                    <div class="col-md-3 form-group">
                        @Html.LabelFor(model => model.LicenseNumber, new { @class = "control-label small" })
                        @Html.TextBoxFor(model => model.LicenseNumber, new { @class = "form-control input-sm", data_ng_model = "stateLicense.LicenseNumber" })
                        @Html.ValidationMessageFor(model => model.LicenseNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(model => model.StateLicenseType, new { @class = "control-label small" })
                        @Html.DropDownListFor(model => model.StateLicenseType, new[] { new SelectListItem { Value = "ME", Text = "ME" }, new SelectListItem { Value = "MD", Text = "MD" }, new SelectListItem { Value = "DDS", Text = "DDS" } }, "-- select --", new { @class = "form-control input-sm", data_ng_model = "stateLicense.StateLicenseType" })
                        @Html.ValidationMessageFor(model => model.StateLicenseType, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(model => model.StateLicenseStatus, new { @class = "control-label small" })
                        @Html.DropDownListFor(model => model.StateLicenseStatus, new[] { new SelectListItem { Value = "Active", Text = "Active" }, new SelectListItem { Value = "Inactive", Text = "Inactive" }, new SelectListItem { Value = "Drafted", Text = "Drafted" } }, "-- select --", new { @class = "form-control input-sm", data_ng_model = "stateLicense.StateLicenseStatus" })
                        @Html.ValidationMessageFor(model => model.StateLicenseStatus, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3 form-group">
                        @*@Html.LabelFor(model => model.IssuingState, new { @class = "control-label small" })
                        <select id="stateIssue" class="form-control input-sm" data-ng-model="stateLicense.IssuingState">
                            <option value="" disabled selected>--Select--</option>
                            <option ng-repeat="state in States | unique: 'State'" value="{{state.State}}">{{state.State}}</option>
                        </select>
                           @Html.ValidationMessageFor(model => model.IssuingState, "", new { @class = "text-danger" })*@
                        <label class="control-label small">Are you currently practicing in this state?</label>
                        <div class="radio">
                            <label class="radio-inline">
                                <input type="radio" name="SL" value="Y" data-ng-model="stateLicense.PracticingState"> Yes
                            </label>
                            <label class="radio-inline">
                                <input type="radio" name="SL" value="N" data-ng-model="stateLicense.PracticingState"> No
                            </label>
                        </div>
                    </div>
                    </div>
                <div class="col-md-12 form-group">

                  
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(model => model.IssueDate, new { @class = "control-label small" })
                        @Html.TextBoxFor(model => model.IssueDate, new { @class = "form-control input-sm", type = "date", data_ng_model = "stateLicense.IssueDate" })
                        @Html.ValidationMessageFor(model => model.IssueDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(model => model.ExpiryDate, new { @class = "control-label small" })
                        @Html.TextBoxFor(model => model.ExpiryDate, new { @class = "form-control input-sm", type = "date", data_ng_model = "stateLicense.ExpiryDate" })
                        @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3 form-group">
                        @Html.LabelFor(model => model.CurrentIssueDate, new { @class = "control-label small" })
                        @Html.TextBoxFor(model => model.CurrentIssueDate, new { @class = "form-control input-sm", type = "date", data_ng_model = "stateLicense.CurrentIssueDate" })
                        @Html.ValidationMessageFor(model => model.CurrentIssueDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.LicenseInGoodStanding, new { @class = "control-label small" })
                        <div class="radio">
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.LicenseInGoodStanding, true, new { data_ng_model = "stateLicense.LicenseInGoodStanding" }) Yes
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.LicenseInGoodStanding, false, new { data_ng_model = "stateLicense.LicenseInGoodStanding" }) No
                            </label>
                        </div>
                        @Html.ValidationMessageFor(model => model.LicenseInGoodStanding, "", new { @class = "text-danger" })
                    </div>
                    </div>
                <div class="col-md-12 form-group">

                  
                    <div class="form-group col-md-12">
                        <div class="col-md-11">
                            <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                                <div class="form-control" data-trigger="fileinput"><i class="glyphicon glyphicon-file fileinput-exists"></i> <span class="fileinput-filename"></span></div>
                                <span class="input-group-addon btn btn-default btn-sm btn-file"><span class="fileinput-new small">State License Document</span><span class="fileinput-exists">Change</span>@Html.TextBoxFor(model => model.StateLicenseDocumentPath, new { type = "file", data_ng_model = "stateLicense.StateLicenseDocumentPath" })</span>
                                <a href="#" class="input-group-addon btn btn-default btn-sm fileinput-exists" data-dismiss="fileinput">Remove</a>
                            </div>
                        </div>
                        <div class="col-md-1" ng-if="stateLicense.StateLicenseDocumentPath!=''">
                            <a href="{{stateLicense.StateLicenseDocumentPath}}" target="_blank"><i class="fa fa-2x fa-file"></i></a>
                        </div>
                    </div>
                </div>
                        @*<div class="form-group col-lg-3">
                @Html.LabelFor(model => model.IsRelinquished, new { @class = "control-label small" })
                <div class="radio">
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.IsRelinquished, true, new { data_ng_model = "stateLicense.IsRelinquished" }) Yes
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.IsRelinquished, false, new { data_ng_model = "stateLicense.IsRelinquished" }) No
                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.IsRelinquished, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3 form-group">
                @Html.LabelFor(model => model.RellinquishedDate, new { @class = "control-label small" })
                @Html.TextBoxFor(model => model.RellinquishedDate, new { @class = "form-control input-sm", type = "date", data_ng_model = "stateLicense.RellinquishedDate" })
                @Html.ValidationMessageFor(model => model.RellinquishedDate, "", new { @class = "text-danger" })
            </div>*@
                 
                    @*<div class="col-md-12 form-group">

                        <div class="col-md-11 form-group">
                            <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                                <div class="form-control" data-trigger="fileinput"><i class="glyphicon glyphicon-file fileinput-exists"></i> <span class="fileinput-filename"></span></div>
                                <span class="input-group-addon btn btn-default btn-sm btn-file"><span class="fileinput-new small">State License Certificate</span><span class="fileinput-exists">Change</span>@Html.TextBoxFor(model => model.StateLicenseDocumentPath, new { type = "file", data_ng_model = "stateLicense.Certificate" })</span>
                                <a href="#" class="input-group-addon btn btn-default btn-sm fileinput-exists" data-dismiss="fileinput">Remove</a>
                            </div>
                        </div>
                        <div class="col-md-1">
                            <a href="~/Content/Document/ATTESTATIONOFSITEVISIT.pdf" target="_blank"><i class="fa fa-2x fa-file"></i></a>
                        </div>
                    </div>*@
                <div class="col-md-12 form-group">
                    <div class="col-md-12">
                        <button type="button" class="btn btn-warning btn-sm" ng-click="cancelStateLicense()">Cancel</button>
                        <button type="submit" class="btn btn-primary btn-sm pull-right" ng-click="saveStateLicense(stateLicense)">{{submitButtonText}}</button>
                    </div>
                </div>
                </div>
        </form>
</div>
</fieldset>
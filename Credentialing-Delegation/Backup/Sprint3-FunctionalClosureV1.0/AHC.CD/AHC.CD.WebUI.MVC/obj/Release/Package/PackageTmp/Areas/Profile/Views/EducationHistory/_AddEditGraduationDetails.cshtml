@model AHC.CD.WebUI.MVC.Areas.Profile.Models.EducationHistory.EducationDetailViewModel
@using AHC.CD.WebUI.MVC.Areas.Profile.Attributes;
       
 <div class="clearfix"></div>
<form id="PGForm">
    <div id="graduationForm">

        <div class=" col-lg-12 zero-padding-left-right-div">
            <fieldset>
                <legend>                    
                    <span ng-if="visibilityControl=='addgraduationDetailViewModel'">Add Graduate/Medical School Details</span>
                    <span ng-if="visibilityControl==($index+'_editgraduationDetailViewModel')">Update Graduate/Medical School Details</span>
                </legend>
                <div class="legend2 pull-right">
                    <button type="button" class="btn btn-xs btn-default" data-container="body" data-toggle="popover" data-placement="left" data-trigger="focus" data-content="*Provide the appropriate information for the school that issued your professional degree"><i class="fa fa-question"></i></button>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger validSummary" })
                <span ng-if="tempObject.EducationDetailID">
                    @Html.HiddenFor(model => model.EducationDetailID, new { id = "EducationDetailID", ng_value = "tempObject.EducationDetailID", data_ng_model = "tempObject.EducationDetailID" })
                </span>
                @Html.HiddenFor(model => model.EducationQualificationType, new { id = "EducationQualificationType", ng_value = "2", data_ng_model = "tempObject.EducationQualificationType" })



                <span ng-if="tempObject.SchoolInformation.SchoolInformationID">
                    @Html.HiddenFor(model => model.SchoolInformation.SchoolInformationID, new { id = "SchoolInformationID", ng_value = "tempObject.SchoolInformation.SchoolInformationID", data_ng_model = "tempObject.SchoolInformation.SchoolInformationID" })

                </span>
                <div class="col-lg-12">
                   
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.USGraduateYesNoOption, htmlAttributes: new { @class = "control-label small" })
                        @*<label class="control-label small">US Graduate ?</label>*@
                        &nbsp;&nbsp;
                        <div>
                            @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.YesNoOption)))
                            {
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.USGraduateYesNoOption, (int)value, new { data_ng_model = "tempObject.USGraduateYesNoOption" }) @value.ToString()
                                </label>
                            }
                        </div>
                        @Html.ValidationMessageFor(model => model.USGraduateYesNoOption, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-6 form-group">
                        @Html.LabelFor(model => model.GraduateType, htmlAttributes: new { @class = "control-label small" })
                        &nbsp;&nbsp;
                        <div>
                            @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.EducationGraduateType)))
                            {
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.GraduateType, (int)value, new { data_ng_model = "tempObject.GraduateType" }) @value.GetType().GetMember(value.ToString())[0].GetCustomAttributesData()[0].ToString().Split('"')[1]
                                </label>
                            }
                        </div>
                        @Html.ValidationMessageFor(model => model.GraduateType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="form-group col-md-4">

                        @Html.LabelFor(model => model.SchoolInformation.SchoolName, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            <input type="text" class="form-control input-sm" data-val="true" data-val-required="Please select the School Name" name="SchoolInformation.SchoolName" ng-model="tempObject.SchoolInformation.SchoolName" ng-focus="searchCumDropDown('ForPgSchoolName'+$index)" />
                            <div class="ProviderTypeSelectAutoList popover fade bottom in" role="tooltip" id="ForPgSchoolName{{$index}}">
                                <table class="table table-striped table-bordered table-hover table-condensed">
                                    <tbody>
                                        <tr ng-repeat="school in filterPgSchoolData=(masterSchools | filter : tempObject.SchoolInformation.SchoolName) track by $index" ng-click="addIntoSchoolDropDown(school.Name,'ForPgSchoolName')" class="pointer">
                                            <td>{{school.Name}}</td>
                                        </tr>
                                        <tr ng-if="!tempObject.SchoolInformation.SchoolName.length">
                                            <td>No data..... </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>    
                        </div>
                        @Html.ValidationMessageFor(model => model.SchoolInformation.SchoolName, "", new { @class = "text-danger" })
                    </div>
                    
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.QualificationDegree, htmlAttributes: new { @class = "control-label small" })
                        <input type="text" class="form-control input-sm" data-val="true" data-val-required="Please select the Degree awarded" name="QualificationDegree" ng-model="tempObject.QualificationDegree" ng-focus="searchCumDropDown('ForPgDegree'+$index)" />
                        <div class="ProviderTypeSelectAutoList popover fade bottom in" role="tooltip" id="ForPgDegree{{$index}}">
                            <table class="table table-striped table-bordered table-hover table-condensed">
                                <tbody>
                                    <tr ng-repeat="degree in filterPgDegreeData=(masterDegrees | filter : tempObject.QualificationDegree)" ng-click="addIntoDegreeDropDown(degree.Title,'ForPgDegree')" class="pointer">
                                        <td>{{degree.Title}}</td>
                                    </tr>
                                    <tr ng-if="!filterPgDegreeData.length">
                                        <td>No data..... </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div> 
                        @Html.ValidationMessageFor(model => model.QualificationDegree, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.SchoolInformation.Street, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.TextBoxFor(model => model.SchoolInformation.Street, new { @class = "form-control input-sm", placeholder = "street", data_ng_model = "tempObject.SchoolInformation.Street" })
                        </div>
                        @Html.ValidationMessageFor(model => model.SchoolInformation.Street, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.SchoolInformation.Building, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.TextBoxFor(model => model.SchoolInformation.Building, new { @class = "form-control input-sm", placeholder = "building", data_ng_model = "tempObject.SchoolInformation.Building" })
                        </div>
                        @Html.ValidationMessageFor(model => model.SchoolInformation.Building, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.SchoolInformation.City, htmlAttributes: new { @class = "control-label small" })
                        <div>                           
                            <input type="text" class="form-control input-sm"  ng-bind="City" placeholder="enter city" data-val="true" data-val-required="The City* field is required" ng-model="tempObject.selectedEduLocation" data-limit="10" ng-options="location.City +'  '+ location.State +'  '+ location.Zipcode for location in Locations" ng-change="addressAutocomplete(tempObject.selectedEduLocation)" bs-typeahead />
                            @Html.HiddenFor(model => model.SchoolInformation.City, new { name="SchoolInformation.City", ng_value = "tempObject.SchoolInformation.City" })
                        </div>
                        @Html.ValidationMessageFor(model => model.SchoolInformation.City, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.SchoolInformation.State, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            
                            <input type="text" name="SchoolInformation.State" data-val="true" data-val-required="The State* field is required" class="form-control input-sm" ng-bind="State" ng-model="tempObject.SchoolInformation.State" />
                        </div>
                        @Html.ValidationMessageFor(model => model.SchoolInformation.State, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="col-lg-12">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.SchoolInformation.ZipCode, htmlAttributes: new { @class = "control-label small" })
                        <div>
                           
                            <input type="text" name="SchoolInformation.ZipCode" data-val="true" data-val-required="The Zip code* field is required" class="form-control input-sm" ng-bind="ZipCode" ng-model="tempObject.SchoolInformation.ZipCode" />
                        </div>
                        @Html.ValidationMessageFor(model => model.SchoolInformation.ZipCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.SchoolInformation.Country, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            
                            <input type="text" name="SchoolInformation.Country" data-val="true" data-val-required="The Country* field is required" class="form-control input-sm" ng-bind="Country" ng-model="tempObject.SchoolInformation.Country" />
                        </div>
                        @Html.ValidationMessageFor(model => model.SchoolInformation.Country, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.SchoolInformation.County, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @*<select id="County" name="SchoolInformation.County" class="form-control input-sm ng-pristine ng-valid ng-touched" ng-model="tempObject.SchoolInformation.County" ng-change="getCities(tempObject.SchoolInformation.County)">
                                    <option ng-repeat="county in Counties track by $index | unique: 'County'" value="{{county.County}}" ng-selected="county.County == tempObject.SchoolInformation.County">{{county.County}}</option>
                                </select>*@
                            <input type="text" name="SchoolInformation.County" class="form-control input-sm" ng-bind="County" ng-model="tempObject.SchoolInformation.County" />
                        </div>
                        @Html.ValidationMessageFor(model => model.SchoolInformation.County, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.SchoolInformation.Email, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.TextBoxFor(model => model.SchoolInformation.Email, new { id = "Email", @class = "form-control input-sm", placeholder = "email", data_ng_model = "tempObject.SchoolInformation.Email" })
                            @Html.ValidationMessageFor(model => model.SchoolInformation.Email, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.SchoolInformation.Phone, htmlAttributes: new { @class = "control-label small" })
                        <div class="input-group">
                            <span ng-if="!tempObject.SchoolInformation.PhoneCountryCode" ng-init="tempObject.SchoolInformation.PhoneCountryCode='+1'"></span>
                            <div class="input-group-btn">
                                <button type="button" class="btn btn-default countryCodeClass" ng-click="showContryCodeDiv('PgTelephoneCountryCode'+$index)"> {{tempObject.SchoolInformation.PhoneCountryCode}} <span class="caret"></span></button>
                            </div>
                            <div class="countryDailCodeContainer popover fade bottom in" role="tooltip" id="PgTelephoneCountryCode{{$index}}">
                                <div class="arrow"></div>
                                <h3 class="popover-title">Select Country Dial Code</h3>
                                <div class="popover-content">
                                    <select name="SchoolInformation.PhoneCountryCode" ng-model="tempObject.SchoolInformation.PhoneCountryCode">
                                        <option ng-repeat="code in CountryDialCodes" value="{{code.dial_code}}" ng-selected="code.dial_code == tempObject.SchoolInformation.PhoneCountryCode">{{code.name}}({{code.dial_code}})</option>
                                    </select>
                                </div>
                            </div>
                            <div>
                                @Html.TextBoxFor(model => model.SchoolInformation.Phone, new { id = "Phone", @class = "form-control", placeholder = "phone number", data_ng_model = "tempObject.SchoolInformation.Phone" })

                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.SchoolInformation.Phone, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.SchoolInformation.Fax, htmlAttributes: new { @class = "control-label small" })
                        <div class="input-group">
                            <span ng-if="!tempObject.SchoolInformation.FaxCountryCode" ng-init="tempObject.SchoolInformation.FaxCountryCode='+1'"></span>
                            <div class="input-group-btn">
                                <button type="button" class="btn btn-default countryCodeClass" ng-click="showContryCodeDiv('PgFaxCountryCode'+$index)"> {{tempObject.SchoolInformation.FaxCountryCode}} <span class="caret"></span></button>
                            </div>
                            <div class="countryDailCodeContainer popover fade bottom in" role="tooltip" id="PgFaxCountryCode{{$index}}">
                                <div class="arrow"></div>
                                <h3 class="popover-title">Select Country Dial Code</h3>
                                <div class="popover-content">
                                    <select name="SchoolInformation.FaxCountryCode" ng-model="tempObject.SchoolInformation.FaxCountryCode">
                                        <option ng-repeat="code in CountryDialCodes" value="{{code.dial_code}}" ng-selected="code.dial_code == tempObject.SchoolInformation.FaxCountryCode">{{code.name}}({{code.dial_code}})</option>
                                    </select>
                                </div>
                            </div>
                            <div>
                                @Html.TextBoxFor(model => model.SchoolInformation.Fax, new { id = "Fax", @class = "form-control", placeholder = "fax number", data_ng_model = "tempObject.SchoolInformation.Fax" })

                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.SchoolInformation.Fax, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="col-lg-12">
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control input-sm", placeholder = "mm/dd/yyyy", data_ng_model = "tempObject.StartDate", data_date_format = "MM/dd/yyyy", bs_datepicker = "" })
                        </div>
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control input-sm", placeholder = "mm/dd/yyyy", data_ng_model = "tempObject.EndDate", data_date_format = "MM/dd/yyyy", bs_datepicker = "" })
                        </div>
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.CompletedYesNoOption, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.YesNoOption)))
                            {
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.CompletedYesNoOption, (int)value, new { data_ng_model = "tempObject.CompletedYesNoOption" }) @value.ToString()
                                </label>
                            }
                        </div>
                        @Html.ValidationMessageFor(model => model.CompletedYesNoOption, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="form-group" ng-class="{'col-lg-11':tempObject.CertificatePath,'col-lg-12':!tempObject.CertificatePath}">
                        @Html.HiddenFor(model => model.CertificatePath, new { ng_value = "tempObject.CertificatePath" })
                        <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                            <div class="form-control" data-trigger="fileinput"><i class="glyphicon glyphicon-file fileinput-exists"></i> <span class="fileinput-filename"></span></div>
                            <span class="input-group-addon btn btn-default btn-sm btn-file"><span class="fileinput-new">@Html.LabelFor(model => model.CertificateDocumentFile, htmlAttributes: new { @class = "control-label small" })</span><span class="fileinput-exists">Change</span>@Html.TextBoxFor(model => model.CertificateDocumentFile, new { name = "CertificateDocumentFile", id = "CertificateDocumentFile", type = "file", data_ng_model = "tempObject.CertificateDocumentFile" })</span>
                            <a href="#" class="input-group-addon btn btn-default btn-sm fileinput-exists" data-dismiss="fileinput">Remove</a>
                        </div>
                        @Html.ValidationMessageFor(model => model.CertificateDocumentFile, "", new { @class = "text-danger" })
                    </div>
                    @if (ProfileActionValidator.IsAuthorized(ProfileActionType.Preview, ViewBag.Roles, false))
                    {
                       
                        <div ng-if="tempObject.CertificatePath" class="col-lg-1 form-group">
                            <a href="/Document/View?path={{tempObject.CertificatePath}}" target="_blank"><i class="fa fa-3x fa-file"></i></a>
                        </div>
                       
                    }

                </div>

            </fieldset>

            <div class="clearfix"></div><br />
            <div class="col-md-12 form-group">
                <button ng-show="visibilityControl==($index+'_editgraduationDetailViewModel')" type="button" class="btn btn-warning btn-sm" ng-click="operateCancelControl('')">Cancel</button>
                <button ng-show="visibilityControl=='addgraduationDetailViewModel'" type="button" class="btn btn-warning btn-sm" ng-click="operateCancelControl('')">Cancel</button>
                <button ng-show="visibilityControl=='addgraduationDetailViewModel'" type="button" class="btn btn-primary btn-sm pull-right" ng-click="saveGraduation(tempObject)">Add</button>
                <button ng-show="visibilityControl==($index+'_editgraduationDetailViewModel')" type="button" class="btn btn-primary btn-sm pull-right" ng-click="saveGraduation(tempObject,$index)">Update</button>
            </div>
            <div ng-show="ErrorInPGDetails" class="col-lg-12">
                <div class="alert alert-danger" role="alert">
                    <span class="pull-right" ng-click="ErrorInPGDetails=false"><i class="fa fa-times"></i></span>
                    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                    <span class="sr-only">Error:</span>
                    Error Lists : <br />
                    <span ng-repeat="err in PGDetailsErrorList track by $index">{{err}}</span>
                </div>
            </div>
        </div>
    </div>
</form>
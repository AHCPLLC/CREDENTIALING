@model AHC.CD.WebUI.MVC.Areas.Profile.Models.EducationHistory.TrainingDetailViewModel
@using AHC.CD.WebUI.MVC.Areas.Profile.Attributes;

<div class="clearfix"></div>
    <form id="TrainingForm">
        <div id="programForm">
            @Html.ValidationSummary(true, "", new { @class = "text-danger validSummary" })
            <span ng-if="tempObject.TrainingDetailID">
                @Html.HiddenFor(model => model.TrainingDetailID, new { ng_value = "tempObject.TrainingDetailID", data_ng_model = "tempObject.TrainingDetailID" })
            </span>

            
            <div class=" col-lg-12 zero-padding-left-right-div">
                <fieldset>
                    <legend>                        
                        <span ng-if="visibilityControl=='addresidencyInternshipViewModel'">Add School Details</span>
                        <span ng-if="visibilityControl==($index+'_editresidencyInternshipViewModel')">Update School Details</span>
                    </legend>
                    <div class="col-lg-12">
                        <span ng-if="tempObject.SchoolInformation.SchoolInformationID">
                            @Html.HiddenFor(model => model.SchoolInformation.SchoolInformationID, new { ng_value = "tempObject.SchoolInformation.SchoolInformationID", data_ng_model = "tempObject.SchoolInformation.SchoolInformationID" })
                        </span>
                        <div class="col-lg-4 form-group">
                            @Html.LabelFor(model => model.SchoolInformation.SchoolName, htmlAttributes: new { @class = "control-label small" })
                            <div>
                                <input type="text" class="form-control input-sm" data-val="true" data-val-required="The School Name * field is required" name="SchoolInformation.SchoolName" ng-model="tempObject.SchoolInformation.SchoolName" ng-focus="searchCumDropDown('ForTrainingSchoolName'+$index)" />
                                <div class="ProviderTypeSelectAutoList popover fade bottom in" role="tooltip" id="ForTrainingSchoolName{{$index}}">
                                    <table class="table table-striped table-bordered table-hover table-condensed">
                                        <tbody>
                                            <tr ng-repeat="school in filterTrainingSchoolData=(masterSchools | filter : tempObject.SchoolInformation.SchoolName) track by $index" ng-click="addIntoSchoolDropDown(school.Name,'ForTrainingSchoolName')" class="pointer">
                                                <td>{{school.Name}}</td>
                                            </tr>
                                            <tr ng-if="!filterTrainingSchoolData.length">
                                                <td>No data..... </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>   
                                @Html.ValidationMessageFor(model => model.SchoolInformation.SchoolName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-4 form-group">
                            @Html.LabelFor(model => model.HospitalName, htmlAttributes: new { @class = "control-label small" })
                            <div>                                
                                <input type="text" class="form-control input-sm" data-val="true" data-val-required="The Hospital Name * field is required" name="HospitalName" ng-model="tempObject.HospitalName" ng-focus="searchCumDropDown('ForTrainingHospitalName'+$index)" />
                                <div class="ProviderTypeSelectAutoList popover fade bottom in" role="tooltip" id="ForTrainingHospitalName{{$index}}">
                                    <table class="table table-striped table-bordered table-hover table-condensed">
                                        <tbody>
                                            <tr ng-repeat="hospital in filterTrainingHospitalData=(masterHospitals | filter : tempObject.HospitalName) track by $index" ng-click="addIntoHospitalDropDown(hospital.HospitalName,'ForTrainingHospitalName')" class="pointer">
                                                <td>{{hospital.HospitalName}}</td>
                                            </tr>
                                            <tr ng-if="!filterTrainingHospitalData.length">
                                                <td>No data..... </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>   
                                @Html.ValidationMessageFor(model => model.HospitalName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.SchoolInformation.Street, htmlAttributes: new { @class = "control-label small" })
                            <div>
                                @Html.TextBoxFor(model => model.SchoolInformation.Street, new { @class = "form-control input-sm", placeholder = "Street", data_ng_model = "tempObject.SchoolInformation.Street" })
                                @Html.ValidationMessageFor(model => model.SchoolInformation.Street, "", new { @class = "text-danger" })
                            </div>

                        </div>

                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.SchoolInformation.Building, htmlAttributes: new { @class = "control-label small" })
                            <div>
                                @Html.TextBoxFor(model => model.SchoolInformation.Building, new { @class = "form-control input-sm", placeholder = "Building", data_ng_model = "tempObject.SchoolInformation.Building" })
                                @Html.ValidationMessageFor(model => model.SchoolInformation.Building, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.SchoolInformation.City, htmlAttributes: new { @class = "control-label small" })
                            <div>
                                @*<select id="City" name="SchoolInformation.City" class="form-control input-sm ng-pristine ng-valid ng-touched" ng-model="tempObject.SchoolInformation.City">
                                        <option ng-repeat="city in Cities track by $index | unique: 'City'" value="{{city.City}}" ng-selected="city.City == tempObject.SchoolInformation.City">{{city.City}}</option>
                                    </select>*@
                                <input type="text" class="form-control input-sm"  placeholder="enter city" ng-bind="City" data-val="true" data-val-required="The City* field is required" ng-model="tempObject.selectedEduLocation" data-limit="10" ng-options="location.City +'  '+ location.State +'  '+ location.Zipcode for location in Locations" ng-change="addressAutocomplete(tempObject.selectedEduLocation)" bs-typeahead />
                                @Html.HiddenFor(model => model.SchoolInformation.City, new { name="SchoolInformation.City", ng_value = "tempObject.SchoolInformation.City" })
                                @Html.ValidationMessageFor(model => model.SchoolInformation.City, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.SchoolInformation.State, htmlAttributes: new { @class = "control-label small" })
                            <div>
                               
                                <input type="text" name="SchoolInformation.State" data-val="true" data-val-required="The State* field is required" class="form-control input-sm" ng-bind="State" ng-model="tempObject.SchoolInformation.State" />
                                @Html.ValidationMessageFor(model => model.SchoolInformation.State, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.SchoolInformation.ZipCode, htmlAttributes: new { @class = "control-label small" })
                            <div>
                               
                                <input type="text" name="SchoolInformation.ZipCode" data-val="true" data-val-required="The Zip code* field is required" class="form-control input-sm" ng-bind="ZipCode" ng-model="tempObject.SchoolInformation.ZipCode" />                                
                            </div>
                            @Html.ValidationMessageFor(model => model.SchoolInformation.ZipCode, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.SchoolInformation.Country, htmlAttributes: new { @class = "control-label small" })
                            <div>
                               
                                <input type="text" name="SchoolInformation.Country" data-val="true" data-val-required="The Country* field is required" class="form-control input-sm" ng-bind="Country" ng-model="tempObject.SchoolInformation.Country" />
                            </div>
                            @Html.ValidationMessageFor(model => model.SchoolInformation.Country, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.SchoolInformation.County, htmlAttributes: new { @class = "control-label small" })
                            <div>                                
                                <input type="text" name="SchoolInformation.County" class="form-control input-sm" ng-bind="County" ng-model="tempObject.SchoolInformation.County" />
                            </div>
                            @Html.ValidationMessageFor(model => model.SchoolInformation.County, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.SchoolInformation.Email, htmlAttributes: new { @class = "control-label small" })
                            <div>
                                @Html.TextBoxFor(model => model.SchoolInformation.Email, new { id = "Email", @class = "form-control input-sm", placeholder = "email", data_ng_model = "tempObject.SchoolInformation.Email" })
                                @Html.ValidationMessageFor(model => model.SchoolInformation.Email, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="col-lg-4 form-group">
                            @Html.LabelFor(model => model.SchoolInformation.Phone, htmlAttributes: new { @class = "control-label small" })
                            <div class="input-group">
                                <span ng-if="!tempObject.SchoolInformation.PhoneCountryCode" ng-init="tempObject.SchoolInformation.PhoneCountryCode='+1'"></span>
                                <div class="input-group-btn">
                                    <button type="button" class="btn btn-default countryCodeClass" ng-init="+1" ng-click="showContryCodeDiv('ResidecyTelephoneCountryCode'+$index)"> {{tempObject.SchoolInformation.PhoneCountryCode}} <span class="caret"></span></button>
                                </div>
                                <div class="countryDailCodeContainer popover fade bottom in" role="tooltip" id="ResidecyTelephoneCountryCode{{$index}}">
                                    <div class="arrow"></div>
                                    <h3 class="popover-title">Select Country Dial Code</h3>
                                    <div class="popover-content">
                                        <select name="SchoolInformation.PhoneCountryCode" ng-model="tempObject.SchoolInformation.PhoneCountryCode">
                                            <option ng-repeat="code in CountryDialCodes" value="{{code.dial_code}}" ng-selected="code.dial_code == tempObject.SchoolInformation.PhoneCountryCode">{{code.name}}({{code.dial_code}})</option>
                                        </select>
                                    </div>
                                </div>
                                <div>
                                    @Html.TextBoxFor(model => model.SchoolInformation.Phone, new { id = "Phone", @class = "form-control", placeholder = "phone number", data_ng_model = "tempObject.SchoolInformation.Phone" })

                                </div>
                            </div>      
                            @Html.ValidationMessageFor(model => model.SchoolInformation.Phone, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-4 form-group">
                            @Html.LabelFor(model => model.SchoolInformation.Fax, htmlAttributes: new { @class = "control-label small" })
                            <div class="input-group">
                                <span ng-if="!tempObject.SchoolInformation.FaxCountryCode" ng-init="tempObject.SchoolInformation.FaxCountryCode='+1'"></span>
                                <div class="input-group-btn">
                                    <button type="button" class="btn btn-default countryCodeClass" ng-click="showContryCodeDiv('ResidecyFaxCountryCode'+$index)"> {{tempObject.SchoolInformation.FaxCountryCode}} <span class="caret"></span></button>
                                </div>
                                <div class="countryDailCodeContainer popover fade bottom in" role="tooltip" id="ResidecyFaxCountryCode{{$index}}">
                                    <div class="arrow"></div>
                                    <h3 class="popover-title">Select Country Dial Code</h3>
                                    <div class="popover-content">
                                        <select name="SchoolInformation.FaxCountryCode" ng-model="tempObject.SchoolInformation.FaxCountryCode">
                                            <option ng-repeat="code in CountryDialCodes" value="{{code.dial_code}}" ng-selected="code.dial_code == tempObject.SchoolInformation.FaxCountryCode">{{code.name}}({{code.dial_code}})</option>
                                        </select>
                                    </div>
                                </div>
                                <div>
                                    @Html.TextBoxFor(model => model.SchoolInformation.Fax, new { id = "Fax", @class = "form-control ", placeholder = "fax number", data_ng_model = "tempObject.SchoolInformation.Fax" })

                                </div>
                            </div>   
                            @Html.ValidationMessageFor(model => model.SchoolInformation.Fax, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="col-lg-6 form-group">
                            @Html.LabelFor(model => model.CompletedYesNoOption, htmlAttributes: new { @class = "control-label small" })
                            <div>
                                @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.YesNoOption)))
                                {
                                    <label class="radio-inline">
                                        @Html.RadioButtonFor(model => model.CompletedYesNoOption, (int)value, new {  data_ng_model = "tempObject.CompletedYesNoOption" }) @value.ToString()
                                    </label>
                                }
                                
                            </div>
                            @Html.ValidationMessageFor(model => model.CompletedYesNoOption, "", new { @class = "text-danger" })
                        </div>

                        <div ng-show="tempObject.CompletedYesNoOption == 2 " class="col-lg-6 form-group">
                            @Html.LabelFor(model => model.InCompleteReason, htmlAttributes: new { @class = "control-label small" })                           
                            @Html.TextAreaFor(model => model.InCompleteReason, new {@class = "form-control ", data_ng_model = "tempObject.InCompleteReason" })
                            @Html.ValidationMessageFor(model => model.CompletedYesNoOption, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    <div class="col-lg-12">
                        <div class="col-lg-12 form-group">
                            <button ng-show="visibilityControl==($index+'_editresidencyInternshipViewModel') || visibilityControl==('addresidencyInternshipViewModel')" type="button" class="btn btn-warning btn-sm" ng-click="operateCancelControl('')">Cancel</button>
                            <button ng-show="visibilityControl==('addresidencyInternshipViewModel')" type="button" class="btn btn-primary btn-sm pull-right" ng-click="saveProgram(tempObject)">Add</button>
                            <button ng-show="visibilityControl==($index+'_editresidencyInternshipViewModel')" type="button" class="btn btn-primary btn-sm pull-right" ng-click="saveProgram(tempObject, $index)">Update</button>
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>
    </form>
    <div class="clearfix"></div>
    @Html.Partial("~/Areas/Profile/Views/EducationHistory/_AddIndexResidencyInternshipDetail.cshtml")
   


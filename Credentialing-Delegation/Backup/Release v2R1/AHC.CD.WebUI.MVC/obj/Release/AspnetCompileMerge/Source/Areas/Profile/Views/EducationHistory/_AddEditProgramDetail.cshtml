@model AHC.CD.WebUI.MVC.Areas.Profile.Models.EducationHistory.ProgramDetailViewModel
@using AHC.CD.WebUI.MVC.Areas.Profile.Attributes;

<div class="clearfix"></div>
<form id="programForm">
    <div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger validSummary" })
        <span ng-if="tempObject.ProgramDetailID">
            @Html.HiddenFor(model => model.ProgramDetailID, new { ng_value = "tempObject.ProgramDetailID", data_ng_model = "tempObject.ProgramDetailID" })
        </span>
        @Html.HiddenFor(model => model.StatusType, new { ng_value = (int)@AHC.CD.Entities.MasterData.Enums.StatusType.Active, data_ng_model = "tempObject.StatusType" })
        <div>
            <fieldset>
                <legend>
                    Program Details
                </legend>
                <div class="col-lg-12 zero-padding-left-right-div">
                    <div class="col-lg-12 zero-padding-left-right-div">
                        <div class="col-lg-4 form-group">
                            @Html.LabelFor(model => model.PreferenceType, new { @class = "control-label small" })
                            <div>
                                @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.PreferenceType)))
                                {
                                    <label class="radio-inline">
                                        @Html.RadioButtonFor(model => model.PreferenceType, (int)value, new { data_ng_model = "tempObject.PreferenceType" }) @value.ToString()
                                    </label>
                                }
                            </div>
                            @Html.ValidationMessageFor(model => model.PreferenceType, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-6 form-group">
                            @Html.LabelFor(model => model.ResidencyInternshipProgramType, new { @class = "control-label small" })
                            <div>
                                @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.ResidencyInternshipProgramType)))
                                {
                                    <label class="radio-inline">
                                        @Html.RadioButtonFor(model => model.ResidencyInternshipProgramType, (int)value, new { data_ng_model = "tempObject.ResidencyInternshipProgramType" }) @value.GetType().GetMember(value.ToString())[0].GetCustomAttributesData()[0].ToString().Split('"')[1]
                                    </label>
                                }
                            </div>
                            @Html.ValidationMessageFor(model => model.ResidencyInternshipProgramType, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="col-lg-12 zero-padding-left-right-div">
                        <div class="col-lg-4 form-group">
                            @Html.LabelFor(model => model.SpecialtyID, new { @class = "control-label small" })
                            <div>
                                <select class="form-control input-sm" id="SpecialtyID" name="SpecialtyID" ng-model="tempObject.SpecialtyID" data-val="true" data-val-required="Please Select the Specialty*">
                                    <option ng-if="!tempObject.SpecialtyID" selected disabled hidden value="">--select--</option>
                                    <option ng-repeat=" speciality in masterSpecialties track by $index" value="{{speciality.SpecialtyID}}">{{speciality.Name}}</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.SpecialtyID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-4 form-group">

                            @Html.LabelFor(model => model.DirectorName, new { @class = "control-label small" })
                            <div>
                                @Html.TextBoxFor(model => model.DirectorName, new { @class = "form-control input-sm", placeholder = "DirectorName", data_ng_model = "tempObject.DirectorName" })
                            </div>
                            @Html.ValidationMessageFor(model => model.DirectorName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-4 form-group">
                            @Html.LabelFor(model => model.Department, new { @class = "control-label small" })
                            <div>
                                @Html.TextBoxFor(model => model.Department, new { @class = "form-control input-sm", placeholder = "Department", data_ng_model = "tempObject.Department" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-12 zero-padding-left-right-div">
                        <div class="col-lg-4 form-group">
                            @Html.LabelFor(model => model.StartDate, new { @class = "control-label small" })
                            <div>
                                @Html.TextBoxFor(model => model.StartDate, new { data_val_date = "Please enter date in mm/dd/yyyy format", data_bs_datepicker = "bs-datepicker", date_format = "MM/dd/yyyy", @class = "form-control input-sm", placeholder = "mm/dd/yyyy", data_ng_model = "tempObject.StartDate" })
                            </div>
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-4 form-group">
                            @Html.LabelFor(model => model.EndDate, new { @class = "control-label small" })
                            <div>
                                @Html.TextBoxFor(model => model.EndDate, new { data_val_date = "Please enter date in mm/dd/yyyy format", data_bs_datepicker = "bs-datepicker", date_format = "MM/dd/yyyy", @class = "form-control input-sm", placeholder = "mm/dd/yyyy", data_ng_model = "tempObject.EndDate" })
                            </div>
                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12 zero-padding-left-right-div">
                        <div class="form-group" ng-class="{'col-lg-11':tempObject.DocumentPath,'col-lg-12':!tempObject.DocumentPath}">
                            <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                                <div class="form-control" data-trigger="fileinput">
                                    <i class="glyphicon glyphicon-file fileinput-exists"></i>
                                    <span class="fileinput-filename"></span>
                                </div>
                                <span class="input-group-addon btn btn-default btn-sm btn-file">
                                    <span class="fileinput-new small">Supporting Document</span>
                                    <span class="fileinput-exists">Change</span>
                                    @Html.TextBoxFor(model => model.ProgramDocumentPath, new { type = "file", ng_data_model = "tempObject.ProgramDocumentPath" })
                                </span>
                                <a href="#" class="input-group-addon btn btn-default btn-sm fileinput-exists" data-dismiss="fileinput">Remove</a>
                            </div>
                            @Html.HiddenFor(model => model.DocumentPath, new { ng_value = "tempObject.DocumentPath" })
                            @Html.ValidationMessageFor(model => model.ProgramDocumentPath, "", new { @class = "text-danger" })
                        </div>
                        @if (ProfileActionValidator.IsAuthorized(ProfileActionType.Preview, ViewBag.Roles, false))
                        {
                            <div ng-if="tempObject.DocumentPath!=null" class="form-group col-md-1">
                                <a href="/Document/View?path={{tempObject.DocumentPath}}" target="_blank"><i class="fa fa-2x fa-file"></i></a>
                            </div>
                        }
                    </div>
                    <div class="clearfix"></div>
                </div>
            </fieldset>
            <fieldset>
                <legend>
                    School Details
                </legend>
                <div class="col-lg-12 form-group zero-padding-left-right-div" ng-if="visibilityControl=='addProgramDetail'">
                    <div class="col-lg-6">
                        <label class="control-label small">Use Existing School Details?</label>
                        <div ng-init="UseExistingSchool = 'No'">
                            <label class="radio-inline">
                                <input type="radio" value="Yes" ng-model="UseExistingSchool" name="UseExistingSchool" ng-click="showExisting = true" /> Yes
                            </label>
                            <label class="radio-inline">
                                <input type="radio" value="No" ng-model="UseExistingSchool" name="UseExistingSchool" ng-click="showExisting = false" /> No
                            </label>
                        </div>
                    </div>
                    <div class="col-lg-6" ng-if="showExisting">
                        <label class="control-label small">Select Existing School Details</label>
                        <div>
                            <select class="form-control input-sm" ng-model="new" ng-change="prefillDataForAdd(new)">
                                <option selected disabled hidden value="">--select--</option>
                                <option ng-repeat="eachSchool in ResidencyInternshipViewModel track by $index" value="{{eachSchool.SchoolInformation.SchoolInformationID}}" @*ng-click="prefillDataForAdd(eachSchool)"*@ @*ng-click="prefillDataForAdd(eachSchool)"*@>{{eachSchool.SchoolInformation.SchoolName}}</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div id="programForm">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger validSummary" })
                    <span ng-if="tempObject.SchoolInformation.SchoolInformationID">
                        @Html.HiddenFor(model => model.SchoolInformation.SchoolInformationID, new { ng_value = "tempObject.SchoolInformation.SchoolInformationID", data_ng_model = "tempObject.SchoolInformation.SchoolInformationID" })
                    </span>
                    <div>
                        <div class="col-lg-12 zero-padding-left-right-div">
                            <span ng-if="tempObject.SchoolInformation.SchoolInformationID">
                                @Html.HiddenFor(model => model.SchoolInformation.SchoolInformationID, new { ng_value = "tempObject.SchoolInformation.SchoolInformationID", data_ng_model = "tempObject.SchoolInformation.SchoolInformationID" })
                            </span>
                            <div class="col-lg-4 form-group">
                                @Html.LabelFor(model => model.SchoolInformation.SchoolName, htmlAttributes: new { @class = "control-label small" })
                                <div>
                                    <input type="text" ng-focus="tempObject.SchoolInformation.SchoolNamefocus=true" ng-blur="tempObject.SchoolInformation.SchoolNamefocus=false" class="form-control input-sm" data-val="true" data-val-required="Please select the School Name*" name="SchoolInformation.SchoolName" ng-model="tempObject.SchoolInformation.SchoolName" ng-change="searchCumDropDown('ForProgramSchoolName'+$index)" />
                                    <div ng-hide="!filterTrainingSchoolData.length" class="ProviderTypeSelectAutoList popover fade bottom in" role="tooltip" id="ForProgramSchoolName{{$index}}">
                                        <table class="table table-striped table-bordered table-hover table-condensed">
                                            <tbody>
                                                <tr ng-repeat="school in filterTrainingSchoolData=(masterSchools | filter : tempObject.SchoolInformation.SchoolName) track by $index" ng-click="addIntoSchoolDropDown(school.Name,'ForProgramSchoolName')" class="pointer">
                                                    <td>{{school.Name}}</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    <div ng-if="!filterTrainingSchoolData.length" class="ProviderTypeSelectAutoList popover fade bottom in" role="tooltip" ng-hide="!tempObject.SchoolInformation.SchoolNamefocus">
                                        <table class="table table-striped table-bordered table-hover table-condensed">
                                            <tbody>
                                                <tr>
                                                    <td>School Name not found</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.SchoolInformation.SchoolName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-4 form-group">
                                @Html.LabelFor(model => model.HospitalName, htmlAttributes: new { @class = "control-label small" })
                                <div>
                                    <input type="text" ng-focus="tempObject.HospitalNamefocus=true" ng-blur="tempObject.HospitalNamefocus=false" class="form-control input-sm" name="HospitalName" ng-model="tempObject.HospitalName" ng-change="searchCumDropDown('ForProgramHospitalName'+$index)" />
                                    <div ng-hide="!filterTrainingHospitalData.length" class="ProviderTypeSelectAutoList popover fade bottom in" role="tooltip" id="ForProgramHospitalName{{$index}}">
                                        <table class="table table-striped table-bordered table-hover table-condensed">
                                            <tbody>
                                                <tr ng-repeat="hospital in filterTrainingHospitalData=(masterHospitals | filter : tempObject.HospitalName) track by $index" ng-click="addIntoHospitalDropDown(hospital.HospitalName,'ForProgramHospitalName')" class="pointer">
                                                    <td>{{hospital.HospitalName}}</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    <div ng-if="!filterTrainingHospitalData.length" class="ProviderTypeSelectAutoList popover fade bottom in" role="tooltip" ng-hide="!tempObject.HospitalNamefocus">
                                        <table class="table table-striped table-bordered table-hover table-condensed">
                                            <tbody>
                                                <tr>
                                                    <td>School Name not found</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.HospitalName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.SchoolInformation.Street, htmlAttributes: new { @class = "control-label small" })
                                <div>
                                    @Html.TextBoxFor(model => model.SchoolInformation.Street, new { @class = "form-control input-sm", placeholder = "Street", data_ng_model = "tempObject.SchoolInformation.Street" })
                                    @Html.ValidationMessageFor(model => model.SchoolInformation.Street, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 zero-padding-left-right-div">
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.SchoolInformation.Building, htmlAttributes: new { @class = "control-label small" })
                                <div>
                                    @Html.TextBoxFor(model => model.SchoolInformation.Building, new { @class = "form-control input-sm", placeholder = "Building", data_ng_model = "tempObject.SchoolInformation.Building" })
                                    @Html.ValidationMessageFor(model => model.SchoolInformation.Building, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.SchoolInformation.City, htmlAttributes: new { @class = "control-label small" })
                                @Html.TextBoxFor(model => model.SchoolInformation.City, new { @class = "form-control input-sm", data_ng_model = "tempObject.SchoolInformation.City", placeholder = "city name", data_ng_change = "addressAutocomplete(tempObject.SchoolInformation.City)", onfocus = "showLocationList(this)" })
                                <div class="ProviderTypeSelectAutoList popover fade bottom in" role="tooltip">
                                    <table class="table table-striped table-bordered table-hover table-condensed marginBottomAutosearch">
                                        <tbody>
                                            <tr ng-repeat="location in Locations track by $index" ng-click="selectedLocation(location)" class="pointer">
                                                <td>{{location.City}} - {{location.State}} - {{location.CountryCode}}</td>
                                            </tr>
                                            <tr ng-if="Locations.length == 0">
                                                <td>Not Available..... </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                @Html.ValidationMessageFor(model => model.SchoolInformation.City, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.SchoolInformation.State, htmlAttributes: new { @class = "control-label small" })
                                <div>
                                    @Html.EditorFor(model => model.SchoolInformation.State, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.SchoolInformation.State", placeholder = "state name" } })
                                    @Html.ValidationMessageFor(model => model.SchoolInformation.State, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 zero-padding-left-right-div">
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.SchoolInformation.ZipCode, htmlAttributes: new { @class = "control-label small" })
                                <div>
                                    @Html.EditorFor(model => model.SchoolInformation.ZipCode, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.SchoolInformation.ZipCode", placeholder = "zip code" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.SchoolInformation.ZipCode, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.SchoolInformation.Country, htmlAttributes: new { @class = "control-label small" })
                                <div>
                                    @Html.EditorFor(model => model.SchoolInformation.Country, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.SchoolInformation.Country", placeholder = "country" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.SchoolInformation.Country, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.SchoolInformation.County, htmlAttributes: new { @class = "control-label small" })
                                <div>
                                    @Html.EditorFor(model => model.SchoolInformation.County, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.SchoolInformation.County", placeholder = "county" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.SchoolInformation.County, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-12 zero-padding-left-right-div">
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.SchoolInformation.Email, htmlAttributes: new { @class = "control-label small" })
                                <div>
                                    @Html.TextBoxFor(model => model.SchoolInformation.Email, new { id = "Email", @class = "form-control input-sm", placeholder = "email", data_ng_model = "tempObject.SchoolInformation.Email" })
                                    @Html.ValidationMessageFor(model => model.SchoolInformation.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-4 form-group">
                                @Html.LabelFor(model => model.SchoolInformation.Phone, htmlAttributes: new { @class = "control-label small" })
                                <div class="input-group">
                                    <span ng-if="!tempObject.SchoolInformation.PhoneCountryCode" ng-init="tempObject.SchoolInformation.PhoneCountryCode='+1'"></span>
                                    <div class="input-group-btn">
                                        <button type="button" class="btn btn-default countryCodeClass" ng-init="+1" ng-click="showContryCodeDiv('ResidecyTelephoneCountryCode'+$index)" tooltip data-toggle="tooltip" data-placement="top" title="Select Country Code"> {{tempObject.SchoolInformation.PhoneCountryCode}} <span class="caret"></span></button>
                                    </div>
                                    <div class="countryDailCodeContainer popover fade bottom in" role="tooltip" id="ResidecyTelephoneCountryCode{{$index}}">
                                        <div class="arrow"></div>
                                        <h3 class="popover-title">Select Country Dial Code</h3>
                                        <div class="popover-content">
                                            <select name="SchoolInformation.PhoneCountryCode" ng-model="tempObject.SchoolInformation.PhoneCountryCode">
                                                <option ng-repeat="code in CountryDialCodes" value="{{code.dial_code}}" ng-selected="code.dial_code == tempObject.SchoolInformation.PhoneCountryCode">{{code.name}}({{code.dial_code}})</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div>
                                        @Html.TextBoxFor(model => model.SchoolInformation.Phone, new { id = "Phone", @class = "form-control", placeholder = "phone number", data_ng_model = "tempObject.SchoolInformation.Phone", tooltip = true, data_toggle = "tooltip", data_placement = "top", title = "For example if your number is (352)515-3633, then please enter it as 3525153633" })
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.SchoolInformation.Phone, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-4 form-group">
                                @Html.LabelFor(model => model.SchoolInformation.Fax, htmlAttributes: new { @class = "control-label small" })
                                <div class="input-group">
                                    <span ng-if="!tempObject.SchoolInformation.FaxCountryCode" ng-init="tempObject.SchoolInformation.FaxCountryCode='+1'"></span>
                                    <div class="input-group-btn">
                                        <button type="button" class="btn btn-default countryCodeClass" ng-click="showContryCodeDiv('ResidecyFaxCountryCode'+$index)" tooltip data-toggle="tooltip" data-placement="top" title="Select Country Code"> {{tempObject.SchoolInformation.FaxCountryCode}} <span class="caret"></span></button>
                                    </div>
                                    <div class="countryDailCodeContainer popover fade bottom in" role="tooltip" id="ResidecyFaxCountryCode{{$index}}">
                                        <div class="arrow"></div>
                                        <h3 class="popover-title">Select Country Dial Code</h3>
                                        <div class="popover-content">
                                            <select name="SchoolInformation.FaxCountryCode" ng-model="tempObject.SchoolInformation.FaxCountryCode">
                                                <option ng-repeat="code in CountryDialCodes" value="{{code.dial_code}}" ng-selected="code.dial_code == tempObject.SchoolInformation.FaxCountryCode">{{code.name}}({{code.dial_code}})</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div>
                                        @Html.TextBoxFor(model => model.SchoolInformation.Fax, new { id = "Fax", @class = "form-control ", placeholder = "fax number", data_ng_model = "tempObject.SchoolInformation.Fax", tooltip = true, data_toggle = "tooltip", data_placement = "top", title = "For example if your number is (352)515-3633, then please enter it as 3525153633" })
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.SchoolInformation.Fax, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-12 zero-padding-left-right-div">
                            <div class="col-lg-6 form-group">
                                @Html.LabelFor(model => model.CompletedYesNoOption, htmlAttributes: new { @class = "control-label small" })
                                <div>
                                    @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.YesNoOption)))
                                    {
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(model => model.CompletedYesNoOption, (int)value, new { data_ng_model = "tempObject.CompletedYesNoOption", data_ng_change = "clearReason(tempObject.CompletedYesNoOption)" }) @value.ToString()
                                        </label>
                                    }
                                </div>
                                @Html.ValidationMessageFor(model => model.CompletedYesNoOption, "", new { @class = "text-danger" })
                            </div>
                            <div ng-show="tempObject.CompletedYesNoOption == 2 " class="col-lg-6 form-group">
                                @Html.LabelFor(model => model.InCompleteReason, htmlAttributes: new { @class = "control-label small" })
                                @Html.TextAreaFor(model => model.InCompleteReason, new { @class = "form-control ", data_ng_model = "tempObject.InCompleteReason" })
                                @Html.ValidationMessageFor(model => model.InCompleteReason, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div ng-show="activeMessageDiv=='ErrorInProgramDetails'+$index" class="col-lg-12">
                            <div class="alert alert-danger" role="alert">
                                <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                                <span class="sr-only">Error:</span>
                                Error Lists :<br />
                                <span ng-repeat="err in ResidencyDetailsErrorList track by $index">{{err}}</span>
                            </div>
                        </div>
                    </div>
                </div>
            </fieldset>
            <div class="clearfix"></div>
            <div class="col-lg-12 zero-padding-left-right-div">
                <div class="col-lg-12 form-group">
                    <button ng-show="visibilityControl==($index+'_editProgramDetail') || visibilityControl==('addProgramDetail')" type="button" class="btn btn-warning btn-sm" ng-click="operateCancelControl(''); datePickerReset();">Cancel</button>
                    <button ng-show="visibilityControl==('addProgramDetail')" type="button" class="btn btn-primary btn-sm pull-right" ng-click="saveResidencyInternshipFellowshipProgram(tempObject)">Add</button>
                    <button ng-show="visibilityControl==($index+'_editProgramDetail')" type="button" class="btn btn-primary btn-sm pull-right" ng-click="saveResidencyInternshipFellowshipProgram(tempObject, $index)">Update</button>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="clearfix"></div>
@model AHC.CD.WebUI.MVC.Areas.Profile.Models.BoardSpecialty.SpecialtyDetailViewModel
@using AHC.CD.WebUI.MVC.Areas.Profile.Attributes;

<form id="specialtyForm">
    <div class=" col-lg-12 zero-padding-left-right-div">
        @Html.ValidationSummary(true, "", new { @class = "text-danger validSummary" })
        @*Specialty Details ID which is used while editing and kept hidden while adding*@
        <span ng-if="tempObject.SpecialtyDetailID">
            @Html.HiddenFor(model => model.SpecialtyDetailID, new { ng_value = "tempObject.SpecialtyDetailID" })
        </span>
        @*Specialty Details ID which is used while editing and kept hidden while adding*@

        @*Specialty Details section starts here*@
        <fieldset>
            <legend>
                Specialty
            </legend>
            <div class="pull-right legend2" ng-show="visibilityControl == 'addboardSpecialty'">
                <button class="btn btn-xs btn-default" type="button" data-container="body" data-toggle="popover" data-placement="left" data-trigger="hover" data-content="Enter first three letters and select the appropriate one from the given drop-down."><i class="fa fa-question"></i></button>
            </div>
            <div>
                <div class="col-lg-12 zero-padding-left-right-div">
                    <div class="col-lg-6 form-group">
                        @Html.LabelFor(model => model.PreferenceType, new { @class = "control-label small" })
                        <div>
                            @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.PreferenceType)))
                            {
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.PreferenceType, (int)value, new { data_ng_model = "tempObject.PreferenceType", data_ng_click = "fillPercentageOfTime(tempObject.PreferenceType)" }) @value.ToString()
                                </label>
                            }
                        </div>
                        <div>
                            @Html.ValidationMessageFor(model => model.PreferenceType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 form-group">
                        @Html.LabelFor(model => model.PercentageOfTime, new { @class = "control-label small" })
                        <input class="form-control input-sm ng-valid ng-dirty ng-valid-parse valid ng-touched" maxlength="6" data-ng-change="fillPreferenceType(tempObject.PercentageOfTime)" data-ng-model="tempObject.PercentageOfTime" data-val="true" data-val-number="The field % Of Time * must be a number." data-val-range="The field % Of Time * must be between 0 and 100." data-val-range-max="100" data-val-range-min="0" data-val-regex="Please enter valid Percentage Of Time. Only numbers and decimal accepted." data-val-regex-pattern="(^[0-9]\d{0,4}(\.\d{1,1})?%?)\d{0,1}$" id="PercentageOfTime" name="PercentageOfTime" />
                        @Html.ValidationMessageFor(model => model.PercentageOfTime, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-12 zero-padding-left-right-div">
                    <div class="col-lg-6">
                        <label class="control-label small">Do you wish to be listed in the directory under this specialty? *</label>
                        <div class="col-lg-10 zero-padding-left-right-div">
                            <table class="col-lg-12">
                                <tr>
                                    <td>
                                        @Html.LabelFor(model => model.ListedInHMOYesNoOption, new { @class = "control-label small" })
                                    </td>
                                    @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.YesNoOption)))
                                    {
                                        <td>
                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(model => model.ListedInHMOYesNoOption, (int)value, new { data_ng_model = "tempObject.ListedInHMOYesNoOption" }) @value.GetType().GetMember(value.ToString())[0].GetCustomAttributesData()[0].ToString().Split('"')[1]
                                            </label>
                                        </td>
                                    }
                                </tr>
                                <tr>
                                    <td colspan="3">
                                        @Html.ValidationMessageFor(model => model.ListedInHMOYesNoOption, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.LabelFor(model => model.ListedInPOSYesNoOption, new { @class = "control-label small" })
                                    </td>
                                    @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.YesNoOption)))
                                    {
                                        <td>
                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(model => model.ListedInPOSYesNoOption, (int)value, new { data_ng_model = "tempObject.ListedInPOSYesNoOption" }) @value.GetType().GetMember(value.ToString())[0].GetCustomAttributesData()[0].ToString().Split('"')[1]
                                            </label>
                                        </td>
                                    }
                                </tr>
                                <tr>
                                    <td colspan="3">
                                        @Html.ValidationMessageFor(model => model.ListedInPOSYesNoOption, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.LabelFor(model => model.ListedInPPOYesNoOption, new { @class = "control-label small" })
                                    </td>
                                    @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.YesNoOption)))
                                    {
                                        <td>
                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(model => model.ListedInPPOYesNoOption, (int)value, new { data_ng_model = "tempObject.ListedInPPOYesNoOption" }) @value.GetType().GetMember(value.ToString())[0].GetCustomAttributesData()[0].ToString().Split('"')[1]
                                            </label>
                                        </td>
                                    }
                                </tr>
                                <tr>
                                    <td colspan="3">
                                        @Html.ValidationMessageFor(model => model.ListedInPPOYesNoOption, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    @*Master data for Specialties start here*@
                    <div class="col-lg-6 form-group">
                        @Html.LabelFor(model => model.SpecialtyID, new { @class = "control-label small" })
                        @*<input type="text" id="SpecialtyID" class="form-control input-sm" data-val="true" data-val-required="The Specialty Name * Is Required" data-ng-model="tempObject.SpecialtyID" ng-options="type.SpecialtyID as type.Name for type in masterSpecialties track by $index" name="SpecialtyID" bs-typeahead>*@
                        <select ng-model="tempObject.SpecialtyID" data-val="true" data-val-required="Please select the Specialty Name" id="SpecialtyID" name="SpecialtyID" class="form-control input-sm">
                            <option ng-hide="tempObject.SpecialtyID" selected disabled hidden value="">--select--</option>
                            <option ng-repeat="spl in masterSpecialties track by $index" value="{{spl.SpecialtyID}}">{{spl.Name}}</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.SpecialtyID, "", new { @class = "text-danger" })
                    </div>
                    @*Master data for Specialties end here*@
                </div>
                <div class="clearfix"></div><br />
            </div>
        </fieldset>
        @*Specialty Details section ends here*@

        @*Board Details section starts here*@
        <fieldset>
            <legend>
                Board Details
            </legend>
            <div class="pull-right legend2" ng-show="visibilityControl == 'addboardSpecialty'">
                <button class="btn btn-xs btn-default" type="button" data-container="body" data-toggle="popover" data-placement="left" data-trigger="hover" data-content="If you have professional/medical specialty."><i class="fa fa-question"></i></button>
            </div>
            <div class="col-lg-12 zero-padding-left-right-div">
                <div class="col-lg-6 form-group">
                    @Html.LabelFor(model => model.BoardCertifiedYesNoOption, new { @class = "control-label small" })
                    <div>
                        @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.YesNoOption)))
                        {
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.BoardCertifiedYesNoOption, (int)value, new { data_ng_model = "tempObject.BoardCertifiedYesNoOption", data_ng_change = "clearOtherModel(tempObject.BoardCertifiedYesNoOption)" }) @value.GetType().GetMember(value.ToString())[0].GetCustomAttributesData()[0].ToString().Split('"')[1]
                            </label>
                        }
                    </div>
                    <div>
                        @Html.ValidationMessageFor(model => model.BoardCertifiedYesNoOption, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*Master data for Boards start here*@
                <div class="col-lg-6 form-group" ng-if="tempObject.BoardCertifiedYesNoOption==1">
                    @Html.LabelFor(model => model.SpecialtyBoardCertifiedDetail.SpecialtyBoardID, new { @class = "control-label small" })
                    <select class="form-control input-sm" data-val="true" data-val-required="Please select the Board Name" id="SpecialtyBoardID"name="SpecialtyBoardCertifiedDetail.SpecialtyBoardID" ng-model="tempObject.SpecialtyBoardCertifiedDetail.SpecialtyBoardID">
                        <option ng-hide="tempObject.SpecialtyBoardCertifiedDetail.SpecialtyBoardID" selected disabled hidden value="">--select--</option>
                        <option ng-repeat="splBrd in masterSpecialtyBoards track by $index" value="{{splBrd.SpecialtyBoardID}}" ng-selected="{{splBrd.SpecialtyBoardID == tempObject.SpecialtyBoardCertifiedDetail.SpecialtyBoardID}}">{{splBrd.Name}}</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.SpecialtyBoardCertifiedDetail.SpecialtyBoardID, "", new { @class = "text-danger" })
                </div>
                @*Master data for Boards end here*@
            </div>
            <div ng-if="tempObject.BoardCertifiedYesNoOption == 1">
                <span ng-if="tempObject.SpecialtyBoardCertifiedDetail.SpecialtyBoardCertifiedDetailID">
                    @Html.HiddenFor(model => model.SpecialtyBoardCertifiedDetail.SpecialtyBoardCertifiedDetailID, new { ng_value = "tempObject.SpecialtyBoardCertifiedDetail.SpecialtyBoardCertifiedDetailID" })
                    @Html.HiddenFor(model => model.SpecialtyBoardCertifiedDetail.BoardCertificatePath, new { ng_value = "tempObject.SpecialtyBoardCertifiedDetail.BoardCertificatePath" })
                </span>
                <div class="col-lg-12 zero-padding-left-right-div">
                    <div class="col-lg-3 form-group">
                        @Html.LabelFor(model => model.SpecialtyBoardCertifiedDetail.CertificateNumber, new { @class = "control-label small" })
                        @Html.TextBoxFor(model => model.SpecialtyBoardCertifiedDetail.CertificateNumber, new { @class = "form-control input-sm", data_ng_model = "tempObject.SpecialtyBoardCertifiedDetail.CertificateNumber" })
                        @Html.ValidationMessageFor(model => model.SpecialtyBoardCertifiedDetail.CertificateNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-3 form-group">
                        @Html.LabelFor(model => model.SpecialtyBoardCertifiedDetail.InitialCertificationDate, new { @class = "control-label small" })
                        @Html.TextBoxFor(model => model.SpecialtyBoardCertifiedDetail.InitialCertificationDate, new { data_val_date = "Please enter date in mm/dd/yyyy format.", data_date_format = "MM/dd/yyyy", data_bs_datepicker = "bs-datepicker", @class = "form-control input-sm", data_ng_model = "tempObject.SpecialtyBoardCertifiedDetail.InitialCertificationDate", placeholder = "mm/dd/yyyy" })
                        @Html.ValidationMessageFor(model => model.SpecialtyBoardCertifiedDetail.InitialCertificationDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-3 form-group">
                        @Html.LabelFor(model => model.SpecialtyBoardCertifiedDetail.LastReCerificationDate, new { @class = "control-label small" })
                        @Html.TextBoxFor(model => model.SpecialtyBoardCertifiedDetail.LastReCerificationDate, new { data_val_date = "Please enter date in mm/dd/yyyy format.", data_date_format = "MM/dd/yyyy", data_bs_datepicker = "bs-datepicker", @class = "form-control input-sm", data_ng_model = "tempObject.SpecialtyBoardCertifiedDetail.LastReCerificationDate", placeholder = "mm/dd/yyyy" })
                        @Html.ValidationMessageFor(model => model.SpecialtyBoardCertifiedDetail.LastReCerificationDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-3 form-group">
                        @Html.LabelFor(model => model.SpecialtyBoardCertifiedDetail.ExpirationDate, new { @class = "control-label small" })
                        @Html.TextBoxFor(model => model.SpecialtyBoardCertifiedDetail.ExpirationDate, new { data_val_date = "Please enter date in mm/dd/yyyy format.", data_date_format = "MM/dd/yyyy", data_bs_datepicker = "bs-datepicker", @class = "form-control input-sm", data_ng_model = "tempObject.SpecialtyBoardCertifiedDetail.ExpirationDate", placeholder = "mm/dd/yyyy" })
                        @Html.ValidationMessageFor(model => model.SpecialtyBoardCertifiedDetail.ExpirationDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div>
                    <div class="form-group" ng-class="{'col-lg-11':tempObject.SpecialtyBoardCertifiedDetail.BoardCertificatePath,'col-lg-12':!tempObject.SpecialtyBoardCertifiedDetail.BoardCertificatePath}">
                        <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                            <div class="form-control" data-trigger="fileinput">
                                <i class="glyphicon glyphicon-file fileinput-exists"></i>
                                <span class="fileinput-filename"></span>
                            </div>
                            <span class="input-group-addon btn btn-default btn-sm btn-file">
                                <span class="fileinput-new small">Select Supporting Document</span>
                                <span class="fileinput-exists">Change</span>
                                @Html.TextBoxFor(model => model.SpecialtyBoardCertifiedDetail.BoardCertificateDocumentFile, new { name = "SpecialtyBoardCertifiedDetail.BoardCertificateDocumentFile", ng_data_model = "tempObject.SpecialtyBoardCertifiedDetail.BoardCertificateDocumentFile", type = "file" })
                            </span>
                            <a href="#" class="input-group-addon btn btn-default btn-sm fileinput-exists" data-dismiss="fileinput" ng-click="clearFile()">Remove</a>
                        </div>
                        @Html.ValidationMessageFor(model => model.SpecialtyBoardCertifiedDetail.BoardCertificateDocumentFile, "", new { @class = "text-danger" })
                    </div>
                    @if (ProfileActionValidator.IsAuthorized(ProfileActionType.Preview, ViewBag.Roles, false))
                    {
                        <span ng-show="tempObject.SpecialtyBoardCertifiedDetail.BoardCertificatePath">
                            @Html.HiddenFor(model => model.SpecialtyBoardCertifiedDetail.BoardCertificatePath, new { ng_value = "tempObject.SpecialtyBoardCertifiedDetail.BoardCertificatePath" })
                            <a href="/Document/View?path={{tempObject.SpecialtyBoardCertifiedDetail.BoardCertificatePath}}" target="_blank"><i class="fa fa-3x fa-file"></i></a>
                        </span>
                    }
                </div>
                <div class="clearfix"></div>
            </div>
            <div ng-if="tempObject.BoardCertifiedYesNoOption == 2">
                <span ng-if="tempObject.SpecialtyBoardNotCertifiedDetail.SpecialtyBoardNotCertifiedDetailID">
                    @Html.HiddenFor(model => model.SpecialtyBoardNotCertifiedDetail.SpecialtyBoardNotCertifiedDetailID, new { ng_value = "tempObject.SpecialtyBoardNotCertifiedDetail.SpecialtyBoardNotCertifiedDetailID" })
                </span>
                <div class="col-lg-12 form-group">
                    @Html.LabelFor(model => model.SpecialtyBoardNotCertifiedDetail.SpecialtyBoardExamStatus, new { @class = "control-label small" })
                    <div>
                        @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.SpecialtyBoardExamStatus)))
                        {
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.SpecialtyBoardNotCertifiedDetail.SpecialtyBoardExamStatus, (int)value, new { data_ng_model = "tempObject.SpecialtyBoardNotCertifiedDetail.SpecialtyBoardExamStatus", data_ng_click = "clearOtherOptions(tempObject.SpecialtyBoardNotCertifiedDetail.SpecialtyBoardExamStatus)" }) @value.GetType().GetMember(value.ToString())[0].GetCustomAttributesData()[0].ToString().Split('"')[1]
                            </label>
                        }
                    </div>
                    @Html.ValidationMessageFor(model => model.SpecialtyBoardNotCertifiedDetail.SpecialtyBoardExamStatus, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-6 form-group" ng-if="tempObject.SpecialtyBoardNotCertifiedDetail.SpecialtyBoardExamStatus == 2">
                    @Html.LabelFor(model => model.SpecialtyBoardNotCertifiedDetail.ExamDate, new { @class = "control-label small" })
                    @Html.TextBoxFor(model => model.SpecialtyBoardNotCertifiedDetail.ExamDate, new { data_val_date = "Please enter date in mm/dd/yyyy format.", data_date_format = "MM/dd/yyyy", data_bs_datepicker = "bs-datepicker", @class = "form-control input-sm", data_ng_model = "tempObject.SpecialtyBoardNotCertifiedDetail.ExamDate", placeholder = "mm/dd/yyyy" })
                    @Html.ValidationMessageFor(model => model.SpecialtyBoardNotCertifiedDetail.ExamDate, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-6 form-group" ng-if="tempObject.SpecialtyBoardNotCertifiedDetail.SpecialtyBoardExamStatus == 3">
                    @Html.LabelFor(model => model.SpecialtyBoardNotCertifiedDetail.ReasonForNotTakingExam, new { @class = "control-label small" })
                    @Html.TextAreaFor(model => model.SpecialtyBoardNotCertifiedDetail.ReasonForNotTakingExam, new { @class = "form-control input-sm", data_ng_model = "tempObject.SpecialtyBoardNotCertifiedDetail.ReasonForNotTakingExam" })
                    @Html.ValidationMessageFor(model => model.SpecialtyBoardNotCertifiedDetail.ReasonForNotTakingExam, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-6 form-group" ng-if="tempObject.SpecialtyBoardNotCertifiedDetail.SpecialtyBoardExamStatus == 4">
                    @Html.LabelFor(model => model.SpecialtyBoardNotCertifiedDetail.RemarkForExamFail, new { @class = "control-label small" })
                    @Html.TextAreaFor(model => model.SpecialtyBoardNotCertifiedDetail.RemarkForExamFail, new { @class = "form-control input-sm", data_ng_model = "tempObject.SpecialtyBoardNotCertifiedDetail.RemarkForExamFail" })
                    @Html.ValidationMessageFor(model => model.SpecialtyBoardNotCertifiedDetail.RemarkForExamFail, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
        @*Board Details section ends here*@

        @*Error List for Specialty Details*@
        @*<div ng-show="ErrorInSpecialtyDetails" class="col-lg-12">
            <div class="alert alert-danger" role="alert">
                <span class="pull-right" ng-click="ErrorInSpecialtyDetails=false"><i class="fa fa-times"></i></span>
                <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                <span class="sr-only">Error:</span>
                Error Lists : <br />
                <span ng-repeat="err in SpeciatyDetailsErrorList track by $index">{{err}}</span>
            </div>
        </div>*@
        <div ng-show="activeMessageDiv=='errorSpecialty'+$index" class="col-lg-12">
            <div class="alert alert-danger" role="alert">
                <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                <span class="sr-only">Error:</span>
                Error Lists :<br />
                <span ng-repeat="err in errorSpecialty track by $index">{{err}}</span>
            </div>
        </div>
        @*Error List for Specialty Details*@

        @*Buttons to Add/Update/Cancel Specialty Details*@
        <div class="col-md-12 form-group">
            <button type="button" class="btn btn-warning btn-sm" ng-click="operateCancelControl('')">Cancel</button>
            <button ng-show="visibilityControl == 'addboardSpecialty'" type="submit" class="btn btn-primary btn-sm pull-right" ng-click="saveSpecialty(tempObject)">{{submitButtonText}}</button>
            <button ng-show="visibilityControl == ($index + '_editboardSpecialty')" type="submit" class="btn btn-primary btn-sm pull-right" ng-click="updateSpecialty(tempObject, $index)">Update</button>
        </div>
        @*Buttons to Add/Update/Cancel Specialty Details*@

    </div>
</form>
@model AHC.CD.WebUI.MVC.Areas.Profile.Models.WorkHistory.ProfessionalWorkExperienceViewModel

<div>
    <form enctype="multipart/form-data" class="professionalWorkExperienceForm">
        <span ng-if="tempObject.ProfessionalWorkExperienceID">
            @Html.HiddenFor(model => model.ProfessionalWorkExperienceID, new { ng_value = "tempObject.ProfessionalWorkExperienceID" })
        </span>
        <div class="col-lg-12 zero-padding-left-right-div">
            <div class="col-md-12">
                <div class="col-md-12">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.EmployerName, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.EmployerName, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.EmployerName" } })
                        @Html.ValidationMessageFor(model => model.EmployerName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Building, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.Building, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Building", placeholder = "apartment/unit #" } })
                        @Html.ValidationMessageFor(model => model.Building, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Street", placeholder = "street address" } })
                        @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label small" })
                        <select id="HomeAddressCountry" name="Country" class="form-control input-sm" ng-model="tempObject.Country" ng-change="getStates(tempObject.Country, tempObject.State, tempObject.County, tempObject.City)">
                            <option ng-repeat="country in Countries" value="{{country.Code}}" ng-selected="country.Code == tempObject.Country">{{country.Name}}</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label small" })
                        <select id="HomeAddressCountry" name="State" class="form-control input-sm" data-ng-model="tempObject.State" data-ng-change="getCounties(tempObject.State, tempObject.County, tempObject.City)" data-val="true" data-val-required="The State * field is required.">
                            <option>-- select --</option>
                            <option ng-repeat="state in States | unique: 'State'" value="{{state.State}}" ng-selected="state.State == tempObject.State">{{state.State}}</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.County, htmlAttributes: new { @class = "control-label small" })
                        <select id="HomeAddressCounty" name="County" class="form-control input-sm ng-pristine ng-valid ng-touched" data-ng-model="tempObject.County" data-ng-change="getCities(tempObject.County, tempObject.City)" data-val="true" data-val-required="The County * field is required.">
                            <option>-- select --</option>
                            <option ng-repeat="county in Counties | unique: 'County'" value="{{county.County}}" ng-selected="county.County == tempObject.County">{{county.County}}</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label small" })
                        <select id="HomeAddressCity" name="City" class="form-control input-sm ng-pristine ng-valid ng-touched" data-ng-model="tempObject.City" data-val="true" data-val-required="The City * field is required.">
                            <option>-- select --</option>
                            <option ng-repeat="city in Cities | unique: 'City'" value="{{city.City}}" ng-selected="city.City == tempObject.City">{{city.City}}</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Zipcode, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Zipcode", placeholder = "zip code" } })
                        @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.EmployerMobile, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            <div class="input-group">
                                @*<div class="input-group-btn">
                                    <button type="button" class="btn btn-default" ng-click="showContryCodeDiv('EmpMobCountryCode'+$index)"> {{workHistory.CountryCodeMobile}} <span class="caret"></span></button>
                                </div>
                                <div class="countryDailCodeContainer popover fade bottom in" role="tooltip" id='EmpMobCountryCode{{$index}}'>
                                    <div class="arrow"></div>
                                    <h3 class="popover-title">Select Country Dial Code</h3>
                                    <div class="popover-content">
                                        <select ng-model="workHistory.CountryCodeMobile">
                                            <option ng-repeat="code in CountryDialCodes" value="{{code.dial_code}}" ng-selected="code.dial_code == workHistory.CountryCodeMobile">{{code.name}}({{code.dial_code}})</option>
                                        </select>
                                    </div>
                                </div>*@
                                
                            </div>
                            @Html.EditorFor(model => model.EmployerMobile, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.EmployerMobile" } })
                            @Html.ValidationMessageFor(model => model.EmployerMobile, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.EmployerFax, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            <div class="input-group">
                                @*<div class="input-group-btn">
                                    <button type="button" class="btn btn-default btn-sm"><span class="caret"></span></button>
                                </div>
                                <div class="popover fade bottom in" role="tooltip" id="countryDailCodeContainer">
                                    <div class="arrow"></div>
                                    <h3 class="popover-title">Select Country Dial Code</h3>
                                    <div class="popover-content">
                                        <select id="ContactContryCode">
                                            <option>+91</option>
                                        </select>
                                    </div>
                                </div>*@
                                
                            </div>
                            @Html.EditorFor(model => model.EmployerFax, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.EmployerFax" } })
                            @Html.ValidationMessageFor(model => model.EmployerFax, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.JobTitle" } })
                            @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.SupervisorName, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.EditorFor(model => model.SupervisorName, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.SupervisorName" } })
                            @Html.ValidationMessageFor(model => model.SupervisorName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Department" } })
                            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.ProviderTypeID, new { @class = "control-label small" })
                        <select class="form-control input-sm" data-ng-model="tempObject.ProviderTypeID" name="ProviderTypeID">
                            <option value="" disabled selected>--Select--</option>
                            <option ng-repeat="type in ProviderTypes" value="{{type.ProviderTypeID}}">{{type.Title}}</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.ProviderTypeID, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.CanContactEmployerOption, htmlAttributes: new { @class = "control-label small" })
                        <div class="radio">
                            @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.YesNoOption)))
                            {
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.CanContactEmployerOption, (int)value, new { data_ng_model = "tempObject.CanContactEmployerOption" }) @value.ToString()
                                </label>
                            }
                        </div>
                    </div>                    
                </div>
                <div class="col-md-12">
                    <div class="form-group col-md-4">
                        <label class="control-label small">Start Date *</label>
                        <div>
                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control input-sm", type = "date", data_ng_model = "tempObject.StartDate" } })
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label small">End Date *</label>
                        <div>
                            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control input-sm", type = "date", data_ng_model = "tempObject.EndDate" } })
                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label small">Reason For Departure</label>
                        @Html.EditorFor(model => model.DepartureReason, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.DepartureReason" } })
                        @Html.ValidationMessageFor(model => model.DepartureReason, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    @Html.HiddenFor(model => model.WorkExperienceDocPath, new { ng_value = "tempObject.WorkExperienceDocPath" })
                    
                    <div class="form-group col-md-10">
                        <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                            <div class="form-control" data-trigger="fileinput">
                                <i class="glyphicon glyphicon-file fileinput-exists"></i>
                                <span class="fileinput-filename">{{tempObject.WorkExperienceDocPath}}</span>
                            </div>
                            <span class="input-group-addon btn btn-default btn-sm btn-file">
                                <span class="fileinput-new small">>Supporting Document</span>
                                <span class="fileinput-exists">Change</span>
                                <input type="file" name="File" ng-model="tempObject.File" autocomplete="off">
                            </span>

                            <a href="#" class="input-group-addon btn btn-default btn-sm fileinput-exists" data-dismiss="fileinput">Remove</a>
                        </div>                        
                    </div>
                    <div ng-show="tempObject.WorkExperienceDocPath" class="col-md-2">
                        <a href="{{tempObject.WorkExperienceDocPath}}" target="_blank"><i class="fa fa-2x fa-file"></i></a>
                    </div>
                </div>
                <div ng-if="IsProfessionalWorkExperienceHasError" class="col-lg-12">
                    <div class="alert alert-danger" role="alert">
                        <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                        <span class="sr-only">Error:</span>
                        Error Lists : <br />
                        <span ng-repeat="err in ProfessionalWorkExperienceErrorList track by $index">{{err}}</span>
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <div class="col-md-12">
                        <button type="button" class="btn btn-warning btn-sm" ng-click="operateCancelControl('')">Cancel</button>
                        <button type="submit" class="btn btn-primary btn-sm pull-right" ng-click="saveProfessionalWorkExperience(tempObject, $index)">{{submitButtonText}}</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@model AHC.CD.WebUI.MVC.Areas.Profile.Models.Demographic.HomeAddressViewModel

<form>
    <span ng-if="tempObject.HomeAddressID">
        @Html.HiddenFor(model => model.HomeAddressID, new { ng_value = "tempObject.HomeAddressID" })
    </span>
    <div class="col-lg-12 zero-padding-left-right-div">
        <div class="col-lg-3 form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label small" })
            @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Number", placeholder = "number" } })
            @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-3 form-group">
            @Html.LabelFor(model => model.UnitNumber, htmlAttributes: new { @class = "control-label small" })
            @Html.EditorFor(model => model.UnitNumber, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.UnitNumber", placeholder = "apartment/unit #" } })
            @Html.ValidationMessageFor(model => model.UnitNumber, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-3 form-group">
            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label small" })
            @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Street", placeholder = "street address" } })
            @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-3 form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label small" })
            <select id="HomeAddressCountry" name="Country" class="form-control input-sm" ng-model="tempObject.Country" ng-change="getStates(tempObject.Country, tempObject.State, tempObject.County, tempObject.City)">
                <option ng-repeat="country in Countries" value="{{country.Code}}" ng-selected="country.Code == tempObject.Country">{{country.Name}}</option>
            </select>
        </div>
    </div>
    <div class="col-lg-12 zero-padding-left-right-div">
        <div class="col-lg-3 form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label small" })
            <select id="HomeAddressCountry" name="State" class="form-control input-sm" data-ng-model="tempObject.State" data-ng-change="getCounties(tempObject.State, tempObject.County, tempObject.City)" data-val="true" data-val-required="The State * field is required.">
                <option>-- select --</option>
                <option ng-repeat="state in States | unique: 'State'" value="{{state.State}}" ng-selected="state.State == tempObject.State">{{state.State}}</option>
            </select>
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-3 form-group">
            @Html.LabelFor(model => model.County, htmlAttributes: new { @class = "control-label small" })
            <select id="HomeAddressCounty" name="County" class="form-control input-sm ng-pristine ng-valid ng-touched" data-ng-model="tempObject.County" data-ng-change="getCities(tempObject.County, tempObject.City)" data-val="true" data-val-required="The County * field is required.">
                <option>-- select --</option>
                <option ng-repeat="county in Counties | unique: 'County'" value="{{county.County}}" ng-selected="county.County == tempObject.County">{{county.County}}</option>
            </select>
            @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-3 form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label small" })
            <select id="HomeAddressCity" name="City" class="form-control input-sm ng-pristine ng-valid ng-touched" data-ng-model="tempObject.City" data-val="true" data-val-required="The City * field is required.">
                <option>-- select --</option>
                <option ng-repeat="city in Cities | unique: 'City'" value="{{city.City}}" ng-selected="city.City == tempObject.City">{{city.City}}</option>
            </select>
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-3 form-group">
            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label small" })
            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.ZipCode", placeholder = "zip code" } })
            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-lg-12 zero-padding-left-right-div">
        <div class="col-lg-4 form-group">
            @Html.LabelFor(model => model.IsPresentlyStaying, new { @class = "control-label small" })
            <div>
                @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.YesNoOption)))
                {
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.IsPresentlyStayingYesNoOption, (int)value, new { data_ng_model = "tempObject.IsPresentlyStayingYesNoOption" }) @value.ToString()
                    </label>
                }
            </div>
            @Html.ValidationMessageFor(model => model.IsPresentlyStayingYesNoOption, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-4 form-group">
            @Html.LabelFor(model => model.LivingFromDate, htmlAttributes: new { @class = "control-label small" })
            @Html.EditorFor(model => model.LivingFromDate, new { htmlAttributes = new { @class = "form-control input-sm", type = "date", data_ng_model = "tempObject.LivingFromDate" } })
            @Html.ValidationMessageFor(model => model.LivingFromDate, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-4 form-group" ng-if="tempObject.IsPresentlyStayingYesNoOption=='2'">
            @Html.LabelFor(model => model.LivingEndDate, htmlAttributes: new { @class = "control-label small" })
            @Html.EditorFor(model => model.LivingEndDate, new { htmlAttributes = new { @class = "form-control input-sm", type = "date", data_ng_model = "tempObject.LivingEndDate" } })
            @Html.ValidationMessageFor(model => model.LivingEndDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-lg-12 zero-padding-left-right-div">
        <div class="col-lg-4 form-group">
            @Html.LabelFor(model => model.AddressPreferenceType, new { @class = "control-label small" })
            <div>
                @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.PreferenceType)))
                {
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.AddressPreferenceType, (int)value, new { data_ng_model = "tempObject.AddressPreferenceType" }) @value.ToString()
                    </label>
                }
            </div>
            @Html.ValidationMessageFor(model => model.AddressPreferenceType, "", new { @class = "text-danger" })
        </div>
    </div>
    <div ng-if="IsHomeAddressHasError" class="col-lg-12">
        <div class="alert alert-danger" role="alert">
            <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
            <span class="sr-only">Error:</span>
            Error Lists : <br />
            <span ng-repeat="err in HomeAddressErrorList track by $index">{{err}}</span>
        </div>
    </div>
    <div ng-if="visibilityControl=='_NewHomeAddress'" class="col-lg-12 zero-padding-left-right-div">
        <div class="col-md-12 form-group">
            <button type="button" class="btn btn-warning btn-sm" ng-click="operateCancelControl('_NewHomeAddress')">Cancel</button>
            <button type="submit" class="btn btn-primary btn-sm pull-right" ng-click="saveHomeAddress('newHomeAddressForm')">Add</button>
        </div>
    </div>
    <div ng-if="visibilityControl!='_NewHomeAddress'" class="col-lg-12 zero-padding-left-right-div">
        <div class="col-md-12 form-group">
            <button type="button" class="btn btn-warning btn-sm" ng-click="operateCancelControl($index+'_EditHomeAddress')">Cancel</button>
            <button type="submit" class="btn btn-primary btn-sm pull-right" ng-click="updateHomeAddress('homeAddressEditDiv'+$index, $index)">Update</button>
        </div>
    </div>
</form>
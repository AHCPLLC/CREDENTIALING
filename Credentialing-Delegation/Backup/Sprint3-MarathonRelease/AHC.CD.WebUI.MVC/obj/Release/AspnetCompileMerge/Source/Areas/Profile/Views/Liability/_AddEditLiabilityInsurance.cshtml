@model AHC.CD.WebUI.MVC.Areas.Profile.Models.ProfessionalLiability.ProfessionalLiabilityInfoViewModel

<fieldset>
    <legend>
        Professional liability
    </legend>
    <form enctype="multipart/form-data">
        <div class="form-style">
            <span ng-if="tempObject.ProfessionalLiabilityInfoID">
                @Html.HiddenFor(model => model.ProfessionalLiabilityInfoID, new { ng_value = "tempObject.ProfessionalLiabilityInfoID" })
            </span>
            <div class="panel-body">
                <div class="col-lg-6 form-group">
                    @Html.LabelFor(p => p.InsuranceCarrierID, htmlAttributes: new { @class = "control-label small" })
                    <select class="form-control input-sm" ng-model="tempObject.InsuranceCarrierID" name="InsuranceCarrierID">
                        <option></option>
                        <option ng-repeat="insuranceCarrier in masterInsuranceCarriers" value="{{insuranceCarrier.InsuranceCarrierID}}">{{insuranceCarrier.Name}}</option>
                    </select>
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(p => p.InsuranceCarrierAddressID, htmlAttributes: new { @class = "control-label small" })
                    <div>

                        <select class="form-control input-sm" ng-model="tempObject.InsuranceCarrierAddressID" name="InsuranceCarrierAddressID" ng-change="getAddress()">
                            <option></option>
                            <option ng-repeat="insuranceCarrierAddress in masterInsuranceCarrierAddresses" value="{{insuranceCarrierAddress.InsuranceCarrierAddressID}}">{{insuranceCarrierAddress.Street}} - {{insuranceCarrierAddress.County}}</option>
                        </select>
                    </div>
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(p => p.SelfInsuredYesNoOption, htmlAttributes: new { @class = "control-label small" })
                    <div>
                        @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.YesNoOption)))
                        {
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.SelfInsuredYesNoOption, (int)value, new { data_ng_model = "tempObject.SelfInsuredYesNoOption" }) @value.ToString()
                            </label>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group col-md-3">
                    <label class="control-label small">Street</label>
                    <div>
                        <label class="form-control input-sm">{{tempObject.InsuranceCarrierAddress.Street}}</label>
                    </div>
                </div>
                <div class="form-group col-md-3">
                    <label class="control-label small">Zipcode</label>
                    <div>
                        <label class="form-control input-sm">{{tempObject.InsuranceCarrierAddress.ZipCode}}</label>
                    </div>
                </div>
                <div class="form-group col-md-3">

                    <label class="control-label small">Country</label>
                    <div>
                        <label class="form-control input-sm">{{tempObject.InsuranceCarrierAddress.Country}}</label>
                    </div>
                </div>

                <div class="form-group col-md-3">
                    <label class="control-label small">State</label>
                    <div>
                        <label class="form-control input-sm">{{tempObject.InsuranceCarrierAddress.State}}</label>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group col-md-3">
                    <label class="control-label small">County</label>
                    <div>
                        <label class="form-control input-sm">{{tempObject.InsuranceCarrierAddress.County}}</label>
                    </div>
                </div>
                <div class="form-group col-md-3">
                    <label class="control-label small">City</label>
                    <<div>
                        <label class="form-control input-sm">{{tempObject.InsuranceCarrierAddress.City}}</label>
                    </div>
                </div>
                <div class="col-lg-3 form-group">
                    @Html.LabelFor(p => p.OriginalEffectiveDate, htmlAttributes: new { @class = "control-label small" })

                    @Html.TextBoxFor(model => model.OriginalEffectiveDate, new { type = "date", @class = "form-control input-sm", data_ng_model = "tempObject.OriginalEffectiveDate" })
                </div>
                <div class="col-lg-3 form-group">

                    @Html.LabelFor(p => p.EffectiveDate, htmlAttributes: new { @class = "control-label small" })

                    @Html.TextBoxFor(model => model.EffectiveDate, new { type = "date", @class = "form-control input-sm", data_ng_model = "tempObject.EffectiveDate" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-lg-3 form-group">

                    @Html.LabelFor(p => p.ExpirationDate, htmlAttributes: new { @class = "control-label small" })

                    @Html.TextBoxFor(model => model.ExpirationDate, new { type = "date", @class = "form-control input-sm", data_ng_model = "tempObject.ExpirationDate" })
                </div>

                <div class="form-group col-md-3">

                    @Html.LabelFor(p => p.CoverageType, htmlAttributes: new { @class = "control-label small" })
                    <div class="radio">
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.CoverageType, "Individual", new { data_ng_model = "tempObject.TypeOfCoverage" }) Individual
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.CoverageType, "Shared", new { data_ng_model = "tempObject.TypeOfCoverage" }) Shared
                        </label>
                    </div>
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(p => p.UnlimitedCoverageWithInsuranceCarrier, htmlAttributes: new { @class = "control-label small" })
                    &nbsp;
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.UnlimitedCoverageWithInsuranceCarrier, "Yes", new { data_ng_model = "tempObject.UnlimitedCoverage" })  Yes
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.UnlimitedCoverageWithInsuranceCarrier, "No", new { data_ng_model = "tempObject.UnlimitedCoverage" })  No
                    </label>
                </div>

                <div class="form-group col-md-3">
                    @Html.LabelFor(p => p.AmountOfCoverageAggregate, htmlAttributes: new { @class = "control-label small" })

                    @Html.TextBoxFor(model => model.AmountOfCoverageAggregate, new { type = "number", @class = "form-control input-sm", data_ng_model = "tempObject.AmountOfCoverageAgg" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group col-md-3">
                    @Html.LabelFor(p => p.AmountOfCoveragePerOccurance, htmlAttributes: new { @class = "control-label small" })

                    @Html.TextBoxFor(model => model.AmountOfCoveragePerOccurance, new { type = "number", @class = "form-control input-sm", data_ng_model = "tempObject.AmountOfCoveragePerOcc" })
                </div>
                <div class="form-group col-md-3">

                    @Html.LabelFor(p => p.PhoneNumber, htmlAttributes: new { @class = "control-label small" })

                    @Html.TextBoxFor(model => model.PhoneNumber, new { type = "number", @class = "form-control input-sm", data_ng_model = "tempObject.PhoneNumber" })
                </div>
                <div class=" col-md-3 form-group">

                    @Html.LabelFor(p => p.PolicyIncludesTailCoverage, htmlAttributes: new { @class = "control-label small" })
                    <div>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.PolicyIncludesTailCoverage, "Yes", new { data_ng_model = "tempObject.TailCoverage" }) Yes
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.PolicyIncludesTailCoverage, "No", new { data_ng_model = "tempObject.TailCoverage" }) No
                        </label>
                    </div>
                </div>


                <div class="col-md-3 form-group">
                    <div>

                        @Html.LabelFor(p => p.PolicyNumber, htmlAttributes: new { @class = "control-label small" })

                        @Html.TextBoxFor(model => model.PolicyNumber, new { type = "number", @class = "form-control input-sm", data_ng_model = "tempObject.PolicyNumber" })
                    </div>
                </div>
            </div>


            <div class=" col-md-12 form-group">
                @Html.HiddenFor(model => model.InsuranceCertificatePath, new { ng_value = "tempObject.InsuranceCertificatePath" })


                @*<div class="fileinput fileinput-new input-group" data-provides="fileinput">
                        <div class="form-control" data-trigger="fileinput"><i class="glyphicon glyphicon-file fileinput-exists"></i> <span class="fileinput-filename"></span></div>
                        <span class="input-group-addon btn btn-default btn-file"><span class="fileinput-new">@Html.LabelFor(model=>mo)</span><span class="fileinput-exists">Change</span><input type="file" name="..."></span>
                        <a href="#" class="input-group-addon btn btn-default fileinput-exists" data-dismiss="fileinput">Remove</a>
                    </div>*@
                <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                    <div class="form-control" data-trigger="fileinput">
                        <i class="glyphicon glyphicon-file fileinput-exists"></i>
                        <span class="fileinput-filename">{{tempObject.InsuranceCertificatePath}}</span>
                    </div>
                    <span class="input-group-addon btn btn-default btn-sm btn-file">
                        <span class="fileinput-new small">Select Liability Certificate</span>
                        <span class="fileinput-exists">Change</span>
                        <input type="file" name="InsuranceCertificateFile" ng-model="tempObject.InsuranceCertificateFile" autocomplete="off">
                    </span>
                    <a href="#" class="input-group-addon btn btn-default btn-sm fileinput-exists" data-dismiss="fileinput">Remove</a>
                </div>
            </div>
            <br>
            <div class="col-md-1 form-group">
                <div>
                    <a href="/Content/Document/ATTESTATIONOFSITEVISIT.pdf" class="pointer" target="_blank" data-toggle="tooltip" data-placement="top" title="Preview"><i class="fa fa-2x fa-file"></i></a>
                </div>
            </div>


        </div>
        <div ng-if="IsProfLiabilityHasError" class="col-lg-12">
            <div class="alert alert-danger" role="alert">
                <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                <span class="sr-only">Error:</span>
                Error Lists : <br />
                <span ng-repeat="err in ProfLiabilityErrorList track by $index">{{err}}</span>
            </div>
        </div>

        <div class="col-md-12">
            <button class="btn btn-success btn-sm pull-right" ng-click="saveProfessionalLiabilty(tempObject,$index)">Save</button>
            <button class="btn btn-warning btn-sm pull-left" ng-click="operateCancelControl('')">Cancel</button>
        </div>
      
    </form>

</fieldset>

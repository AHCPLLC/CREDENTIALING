@model AHC.CD.WebUI.MVC.Areas.Profile.Models.WorkHistory.ProfessionalWorkExperienceViewModel

<div>
    <form enctype="multipart/form-data" class="professionalWorkExperienceForm">
        <span ng-if="tempObject.ProfessionalWorkExperienceID">
            @Html.HiddenFor(model => model.ProfessionalWorkExperienceID, new { ng_value = "tempObject.ProfessionalWorkExperienceID" })
        </span>
        <div class="col-lg-12">
            <div class="col-md-12">
                <div class="col-md-12">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.EmployerName, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.EmployerName, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.EmployerName" } })
                        @Html.ValidationMessageFor(model => model.EmployerName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Street", placeholder = "street address" } })
                        @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Building, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.Building, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Building", placeholder = "apartment/unit #" } })
                        @Html.ValidationMessageFor(model => model.Building, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-lg-3 form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label small" })
                        <input type="text" name="employercity" placeholder="enter city" class="form-control input-sm" ng-model="tempObject.selectedLocation" data-limit="10" ng-options="location.City +'  '+ location.State +'  '+ location.CountryCode for location in Locations" ng-change="addressAutocomplete(tempObject.selectedLocation)" data-val-regex="Please enter valid city. Only alphabets, spaces, comma, hyphens, dot, quotes and apostrophe accepted." data-val-regex-pattern="^[a-zA-Z0-9 ,-.'&quot;]*$" data-val="true" bs-typeahead />
                        <span class="field-validation-valid text-danger" data-valmsg-for="employercity" data-valmsg-replace="true"></span>
                        @Html.HiddenFor(model => model.City, new { ng_value = "tempObject.City" })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                    
                </div>
                <div class="col-md-12">
                    <div class="col-lg-3 form-group">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.State", placeholder = "state name" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.ZipCode", placeholder = "zip code" } })
                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-lg-3 form-group">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Country", placeholder = "Country name" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-3 form-group">
                        @Html.LabelFor(model => model.County, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.County, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.County", placeholder = "County name" } })
                        @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="col-md-12">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.EmployerMobile, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            <span ng-if="!tempObject.CountryCodeMobile" ng-init="tempObject.CountryCodeMobile='+1'"></span>
                            <div class="input-group">
                                <div class="input-group-btn">
                                    <button type="button" class="btn btn-default countryCodeClass" ng-click="showContryCodeDiv('EmpMobCountryCode'+$index)"> {{tempObject.CountryCodeMobile}} <span class="caret"></span></button>
                                </div>
                                <div class="countryDailCodeContainer popover fade bottom in" role="tooltip" id='EmpMobCountryCode{{$index}}'>
                                    <div class="arrow"></div>
                                    <h3 class="popover-title">Select Country Dial Code</h3>
                                    <div class="popover-content">
                                        <select ng-model="tempObject.CountryCodeMobile" name="CountryCodeMobile">
                                            <option ng-repeat="code in CountryDialCodes" value="{{code.dial_code}}" ng-selected="code.dial_code == tempObject.CountryCodeMobile">{{code.name}}({{code.dial_code}})</option>
                                        </select>
                                    </div>
                                </div>
                                @Html.EditorFor(model => model.EmployerMobile, new { htmlAttributes = new { @class = "form-control", data_ng_model = "tempObject.EmployerMobile" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.CountryCodeMobile, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.EmployerMobile, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.EmployerFax, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            <span ng-if="!tempObject.CountryCodeFax" ng-init="tempObject.CountryCodeFax='+1'"></span>
                            <div class="input-group">
                                <div class="input-group-btn">
                                    <button type="button" class="btn btn-default countryCodeClass" ng-click="showContryCodeDiv('EmpFaxCountryCode'+$index)"> {{tempObject.CountryCodeFax}} <span class="caret"></span></button>
                                </div>
                                <div class="countryDailCodeContainer popover fade bottom in" role="tooltip" id='EmpFaxCountryCode{{$index}}'>
                                    <div class="arrow"></div>
                                    <h3 class="popover-title">Select Country Dial Code</h3>
                                    <div class="popover-content">
                                        <select ng-model="tempObject.CountryCodeFax" name="CountryCodeFax">
                                            <option ng-repeat="code in CountryDialCodes" value="{{code.dial_code}}" ng-selected="code.dial_code == tempObject.CountryCodeFax">{{code.name}}({{code.dial_code}})</option>
                                        </select>
                                    </div>
                                </div>
                                @Html.EditorFor(model => model.EmployerFax, new { htmlAttributes = new { @class = "form-control", data_ng_model = "tempObject.EmployerFax" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.CountryCodeFax, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.EmployerFax, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.EmployerEmail, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.EmployerEmail, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.EmployerEmail" } })
                        @Html.ValidationMessageFor(model => model.EmployerEmail, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.JobTitle" } })
                            @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col-md-12">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.SupervisorName, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.EditorFor(model => model.SupervisorName, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.SupervisorName" } })
                            @Html.ValidationMessageFor(model => model.SupervisorName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Department" } })
                            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.ProviderTypeID, new { @class = "control-label small" })
                        
                        <select class="form-control input-sm" data-ng-model="tempObject.ProviderTypeID" name="ProviderTypeID" id="ProviderTypeID" data-val="true" data-val-required="Please select the Provider type">
                            <option value="" disabled selected>--Select--</option>
                            <option ng-repeat="type in ProviderTypes" value="{{type.ProviderTypeID}}">{{type.Title}}</option>
                        </select>

                        @Html.ValidationMessageFor(model => model.ProviderTypeID, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.CanContactEmployerOption, htmlAttributes: new { @class = "control-label small" })
                        <div class="radio">
                            @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.YesNoOption)))
                            {
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.CanContactEmployerOption, (int)value, new { data_ng_model = "tempObject.CanContactEmployerOption" }) @value.ToString()
                                </label>
                            }
                        </div>
                        @Html.ValidationMessageFor(model => model.CanContactEmployerOption, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group col-md-3">
                        @*<div>
                                <div>
                                    @Html.CheckBoxFor(model => model.CurrentlyWorkingOption, new { @class = "checkbox", data_ng_model = "tempObject.CurrentlyWorkingOption" })
                                </div>
                            </div>
                            {{tempObject.CurrentlyWorkingOption}}*@

                        @Html.LabelFor(model => model.CurrentlyWorkingOption, htmlAttributes: new { @class = "control-label small" })
                        <div class="radio">
                            @foreach (var value in Enum.GetValues(typeof(AHC.CD.Entities.MasterData.Enums.YesNoOption)))
                            {
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.CurrentlyWorkingOption, (int)value, new { data_ng_model = "tempObject.CurrentlyWorkingOption", @checked = "true", ng_change = "currentlyWorkingChange(tempObject.CurrentlyWorkingOption)" }) @value.ToString()
                                </label>
                            }

                        </div>
                        @Html.ValidationMessageFor(model => model.CurrentlyWorkingOption, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.StartDate, new { @class = "control-label small" })
                        @Html.TextBoxFor(model => model.StartDate, new { data_val_date = "Please enter date in mm/dd/yyyy format.", data_date_format = "MM/dd/yyyy", data_bs_datepicker = "bs-datepicker", @class = "form-control input-sm", data_ng_model = "tempObject.StartDate", placeholder = "mm/dd/yyyy" })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3" ng-show="tempObject.CurrentlyWorkingOption==2">
                        @Html.LabelFor(model => model.EndDate, new { @class = "control-label small" })
                        @Html.TextBoxFor(model => model.EndDate, new { data_val_date = "Please enter date in mm/dd/yyyy format.", data_date_format = "MM/dd/yyyy", data_bs_datepicker = "bs-datepicker", @class = "form-control input-sm", data_ng_model = "tempObject.EndDate", placeholder = "mm/dd/yyyy" })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3" ng-show="tempObject.CurrentlyWorkingOption==2">
                        @Html.LabelFor(model => model.DepartureReason, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.DepartureReason, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.DepartureReason" } })
                        @Html.ValidationMessageFor(model => model.DepartureReason, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    @Html.HiddenFor(model => model.WorkExperienceDocPath, new { ng_value = "tempObject.WorkExperienceDocPath" })

                    <div class="form-group col-md-11">
                        <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                            <div class="form-control" data-trigger="fileinput">
                                <i class="glyphicon glyphicon-file fileinput-exists"></i>
                                <span class="fileinput-filename"></span>
                            </div>
                            <span class="input-group-addon btn btn-default btn-sm btn-file">
                                <span class="fileinput-new small">Supporting Document</span>
                                <span class="fileinput-exists">Change</span>
                                @Html.TextBoxFor(model => model.File, new { type = "file", data_ng_model = "tempObject.File" })
                            </span>

                            <a href="#" class="input-group-addon btn btn-default btn-sm fileinput-exists" data-dismiss="fileinput">Remove</a>
                        </div>
                        @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                    </div>
                    <div ng-show="tempObject.WorkExperienceDocPath" class="col-md-1">
                        <a href="/Document/View?path={{tempObject.WorkExperienceDocPath}}" target="_blank"><i class="fa fa-2x fa-file"></i></a>
                    </div>
                </div>
                <div ng-if="IsProfessionalWorkExperienceHasError" class="col-lg-12">
                    <div class="alert alert-danger" role="alert">
                        <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                        <span class="sr-only">Error:</span>
                        Error Lists : <br />
                        <span ng-repeat="err in ProfessionalWorkExperienceErrorList track by $index">{{err}}</span>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>


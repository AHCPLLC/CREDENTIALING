@model AHC.CD.WebUI.MVC.Areas.Profile.Models.PracticeLocationInformation.FacilityEmployeeViewModel

<div class="form-style">
    <form>
        <div class="form-group">
            @Html.ValidationSummary(true, "", new { @class = "text-danger validSummary" })
            <span ng-if="PracticeLocationDetails[$index].PracticeLocationDetailID">
                @Html.HiddenFor(model => model.PracticeLocationDetailID, new { id = "PracticeLocationDetailID", Value = "{{PracticeLocationDetails[$index].PracticeLocationDetailID}}", data_ng_model = "PracticeLocationDetails[$index].PracticeLocationDetailID" })
            </span>
            <span ng-if="PracticeLocationDetails[$index].PrimaryCredentialingContactPerson.EmployeeID">
                @Html.HiddenFor(model => model.EmployeeID, new { id = "EmployeeID", ng_value = "tempObject.EmployeeID", data_ng_model = "tempObject.EmployeeID" })
            </span>
            <span ng-if="tempObject.EmployeeID">
                @Html.HiddenFor(model => model.EmployeeID, new { id = "EmployeeID", ng_value = "tempObject.EmployeeID", data_ng_model = "tempObject.EmployeeID" })
            </span>
            <div class="col-lg-12">
                <div class="col-md-4">
                    <label class="radio-inline">
                        <input type="radio" name="bill" ng-click="radioOption3()" ng-checked="true">
                        Add a new credentialing contact
                    </label>
                </div>
                <div class="col-md-4">
                    <label class="radio-inline">
                        <input type="radio" name="bill" ng-click="radioOption1($index)" ng-disabled="PracticeLocationDetails[$index].BusinessOfficeManagerOrStaff==null">
                        Use office manager as credentialing  contact
                    </label>
                </div>
                <div class="col-md-4">
                    <label class="radio-inline">
                        <input type="radio" name="bill" ng-click="radioOption2()" ng-disabled="credentialingContact.length == 0">
                        Use an existing credentialing contact
                    </label>
                </div>
            </div>
            <div ng-show="credDropDown" class="col-lg-offset-8">
                <select id="credContact" class="form-control input-sm" data-ng-model="cc" ng-change="getDropDownValue(cc)">
                    <option selected disabled value="">--select--</option>
                    <option ng-show="credentialingContact.length == 0" disabled value="">No Data Available</option>
                    <option ng-repeat="cc in  credentialingContact" value="{{cc.MasterEmployeeID}}">{{cc.FirstName}} {{cc.MiddleName}} {{cc.LastName}}</option>
                </select>
            </div>
            <div class="clearfix"></div>
            <br />
            <fieldset id="xyz" @*ng-disabled="billing=='Yes'"*@>
                <div class="col-md-12">
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.FirstName", placeholder = "First Name" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.MiddleName", placeholder = "Middle Name" } })
                        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.LastName", placeholder = "Last Name" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            <span ng-if="!tempObject.CountryCodeTelephone" ng-init="tempObject.CountryCodeTelephone='+1'"></span>
                            <div class="input-group">
                                <div class="input-group-btn">
                                    <button type="button" class="btn btn-default countryCodeClass" tooltip data-toggle="tooltip" data-placement="top" title="Select Country Code" ng-click="showContryCodeDiv('TelephoneCountryCode12'+$index)"> {{tempObject.CountryCodeTelephone}} <span class="caret"></span></button>
                                </div>
                                <div class="countryDailCodeContainer popover fade bottom in" role="tooltip" id='TelephoneCountryCode12{{$index}}'>
                                    <div class="arrow"></div>
                                    <h3 class="popover-title">Select Country Dial Code</h3>
                                    <div class="popover-content">
                                        <select ng-model="tempObject.CountryCodeTelephone" name="CountryCodeTelephone">
                                            <option ng-repeat="code in CountryDialCodes" value="{{code.dial_code}}" ng-selected="code.dial_code == tempObject.CountryCodeTelephone">{{code.name}}({{code.dial_code}})</option>
                                        </select>
                                    </div>
                                </div>
                                @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control", data_ng_model = "tempObject.Telephone", tooltip = true, data_toggle = "tooltip", data_placement = "top", title = "For example if your number is (352)515-3633, then please enter it as 3525153633" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.CountryCodeTelephone, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label small" })
                        <div>
                            <span ng-if="!tempObject.CountryCodeFax" ng-init="tempObject.CountryCodeFax='+1'"></span>
                            <div class="input-group">
                                <div class="input-group-btn">
                                    <button type="button" class="btn btn-default countryCodeClass" tooltip data-toggle="tooltip" data-placement="top" title="Select Country Code" ng-click="showContryCodeDiv('CountryCodeFax123'+$index)"> {{tempObject.CountryCodeFax}} <span class="caret"></span></button>
                                </div>
                                <div class="countryDailCodeContainer popover fade bottom in" role="tooltip" id='CountryCodeFax123{{$index}}'>
                                    <div class="arrow"></div>
                                    <h3 class="popover-title">Select Country Dial Code</h3>
                                    <div class="popover-content">
                                        <select ng-model="tempObject.CountryCodeFax" name="CountryCodeFax">
                                            <option ng-repeat="code in CountryDialCodes" value="{{code.dial_code}}" ng-selected="code.dial_code == tempObject.CountryCodeFax">{{code.name}}({{code.dial_code}})</option>
                                        </select>
                                    </div>
                                </div>
                                @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control", data_ng_model = "tempObject.Fax", tooltip = true, data_toggle = "tooltip", data_placement = "top", title = "For example if your number is (352)515-3633, then please enter it as 3525153633" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.CountryCodeFax, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.EmailAddress", placeholder = "Email Address" } })
                        @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Street", placeholder = "Street Address" } })
                        @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Building, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.Building, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Building", placeholder = "Apartment/Unit #" } })
                        @Html.ValidationMessageFor(model => model.Building, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label small" })
                        @Html.TextBoxFor(model => model.City, new { @class = "form-control input-sm", data_ng_model = "tempObject.City", placeholder = "City", data_ng_change = "addressAutocomplete4(tempObject.City)", data_selectmethod = "selectedLocation4", data_autocomplete = "addressautocomplete" })

                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-3 form-group">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control input-sm",  data_ng_model = "tempObject.State", placeholder = "State Name" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.ZipCode", placeholder = "Zip Code" } })
                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="col-lg-3 form-group" ng-init="tempObject.Country = 'United States'">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Country", placeholder = "Country name" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-3 form-group">
                        @Html.LabelFor(model => model.County, htmlAttributes: new { @class = "control-label small" })
                        @Html.EditorFor(model => model.County, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.County", placeholder = "County name" } })
                        @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
            <div class="clearfix"></div>
            <div ng-show="activeMessageDiv=='errorCredentialingContractInformation'" class="alert alert-danger" role="alert">
                <button ng-click="closeAlertMessage('')" class="close"><span>&times;</span></button>
                <i class="fa fa-2x fa-arrow-up"></i> {{messageDesc}}
            </div>
            <div class="col-lg-12">
                <div class="control-group">
                    <button class="btn btn-warning btn-sm" ng-click="cancelCredendialingContact()">Cancel</button>
                    <button class="btn btn-success btn-sm pull-right" ng-click="saveCredentialingContact($index)">Save</button>
                </div>
            </div>
        </div>
    </form>
</div>
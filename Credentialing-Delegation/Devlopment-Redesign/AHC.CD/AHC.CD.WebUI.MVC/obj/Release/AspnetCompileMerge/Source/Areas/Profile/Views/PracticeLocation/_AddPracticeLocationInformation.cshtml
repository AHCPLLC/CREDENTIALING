@model AHC.CD.WebUI.MVC.Areas.Profile.Models.PracticeLocationInformation.PracticeLocationViewModel

<div class="form-group">
   
    <div class="col-md-12"></div>

        <div class="col-md-12">
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label small" })
                <div>
                    <span ng-if="!tempObject.CountryCodeTelephone" ng-init="tempObject.CountryCodeTelephone='+1'"></span>
                    <div class="input-group">
                        <div class="input-group-btn">
                            <button type="button" class="btn btn-default countryCodeClass" ng-click="showContryCodeDiv('TelephoneCountryCode'+$index)"> {{tempObject.CountryCodeTelephone}} <span class="caret"></span></button>
                        </div>
                        <div class="countryDailCodeContainer popover fade bottom in" role="tooltip" id='TelephoneCountryCode{{$index}}'>
                            <div class="arrow"></div>
                            <h3 class="popover-title">Select Country Dial Code</h3>
                            <div class="popover-content">
                                <select ng-model="tempObject.CountryCodeTelephone" name="CountryCodeTelephone">
                                    <option ng-repeat="code in CountryDialCodes" value="{{code.dial_code}}" ng-selected="code.dial_code == tempObject.CountryCodeTelephone">{{code.name}}({{code.dial_code}})</option>
                                </select>
                            </div>
                        </div>
                        @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control", data_ng_model = "tempObject.Telephone" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.CountryCodeTelephone, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label small" })
                <div>
                    <span ng-if="!tempObject.CountryCodeFax" ng-init="tempObject.CountryCodeFax='+1'"></span>
                    <div class="input-group">
                        <div class="input-group-btn">
                            <button type="button" class="btn btn-default countryCodeClass" ng-click="showContryCodeDiv('CountryCodeFax'+$index)"> {{tempObject.CountryCodeFax}} <span class="caret"></span></button>
                        </div>
                        <div class="countryDailCodeContainer popover fade bottom in" role="tooltip" id='CountryCodeFax{{$index}}'>
                            <div class="arrow"></div>
                            <h3 class="popover-title">Select Country Dial Code</h3>
                            <div class="popover-content">
                                <select ng-model="tempObject.CountryCodeFax" name="CountryCodeFax">
                                    <option ng-repeat="code in CountryDialCodes" value="{{code.dial_code}}" ng-selected="code.dial_code == tempObject.CountryCodeFax">{{code.name}}({{code.dial_code}})</option>
                                </select>
                            </div>
                        </div>
                        @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control", data_ng_model = "tempObject.Fax" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.CountryCodeFax, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label small" })
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.EmailAddress", placeholder = "Office email address" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label small" })
                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Street", placeholder = "street address" } })
                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-12">
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Building, htmlAttributes: new { @class = "control-label small" })
                @Html.EditorFor(model => model.Building, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Building", placeholder = "apartment/unit #" } })
                @Html.ValidationMessageFor(model => model.Building, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label small" })
                @Html.TextBoxFor(model => model.City, new { @class = "form-control input-sm", data_ng_model = "tempObject.City", placeholder = "City", data_ng_change = "addressAutocomplete(tempObject.City)", onfocus = "showLocationList(this)" })
                <div class="ProviderTypeSelectAutoList popover fade bottom in" role="tooltip">
                    <table class="table table-striped table-bordered table-hover table-condensed marginBottomAutosearch">
                        <tbody>
                            <tr ng-repeat="location in Locations track by $index" ng-click="selectedLocation(location)" class="pointer">
                                <td>{{location.City}} - {{location.State}} - {{location.CountryCode}}</td>
                            </tr>
                            <tr ng-if="Locations.length == 0">
                                <td>Not Available</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3 form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label small" })
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.State", placeholder = "state name" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label small" })
                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.ZipCode", placeholder = "zip code" } })
                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-lg-3 form-group">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label small" })
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.Country", placeholder = "Country name" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3 form-group">
                @Html.LabelFor(model => model.County, htmlAttributes: new { @class = "control-label small" })
                @Html.EditorFor(model => model.County, new { htmlAttributes = new { @class = "form-control input-sm", data_ng_model = "tempObject.County", placeholder = "County name" } })
                @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>


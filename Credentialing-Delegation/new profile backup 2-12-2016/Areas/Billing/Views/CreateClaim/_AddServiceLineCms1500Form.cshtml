@using PratianUI
@model PortalTemplate.Areas.Billing.Models.CMS1500.New.Procedure
<tr class="NDCTr" hidden>
    <td colspan="17">
        @Html.TextBoxFor(model => model.NDCData.NDCCode, new { @style = "width:40px;" })
        @Html.TextBoxFor(model => model.NDCData.NDCQlfrId, new { @style = "width:40px;" })
        <i>Line Note:</i>
        @Html.TextBoxFor(model => model.NDCData.LineNote, new { @style = "width:40px;" })
        <i>Anes Start:</i>

        @Html.TextBoxFor(model => model.NDCData.AnesthesiaStartTime, new { @style = "width:40px;" })
        <i>Stop:</i>
        @Html.TextBoxFor(model => model.NDCData.AnesthesiaEndTime, new { @style = "width:40px;" })
        <i>NDC Qual:</i>


        @Html.TextBoxFor(model => model.NDCData.NDCQuantityQlfrCode, new { @style = "width:40px;" })



        @*<select class="txtH ng-pristine ng-untouched ng-valid" style="width:40px;" id="LIN02_NationalDrugCodeQlfr1" name="Claims_Professional.ServiceLine_Professional_837[0].LIN02_NationalDrugCodeQlfr" ng-model="lines.LIN02_NationalDrugCodeQlfr">
                <option selected="" value=""></option>
                <option value="N4">N4</option>
                <option value="EN">EN</option>
                <option value="EO">EO</option>
                <option value="HI">HI</option>
                <option value="ON">ON</option>
                <option value="UK">UK</option>
                <option value="UP">UP</option>
            </select>*@
        <i>NDC Code:</i>
        @Html.TextBoxFor(model => model.NDCData.NDCCode, new { @style = "width:40px;" })
        @*<input type="text" style="width:40px" id="LIN03_NationalDrugCode0" name="Claims_Professional.ServiceLine_Professional_837[0].LIN03_NationalDrugCode" ng-model="lines.LIN03_NationalDrugCode" class="ng-pristine ng-untouched ng-valid">&nbsp;&nbsp;*@
        <i>NDC UnitPrice:</i>
        @Html.TextBoxFor(model => model.NDCData.NDCUnitPrice, new { @style = "width:40px;" })
        @*<input type="text" style="width:40px" id="CPT03_NationalDrugUnitPrice0" name="Claims_Professional.ServiceLine_Professional_837[0].CPT03_NationalDrugUnitPrice" ng-model="lines.CPT03_NationalDrugUnitPrice" class="ng-pristine ng-untouched ng-valid">&nbsp;&nbsp;&nbsp;*@
        <i>NDC Qty:</i>
        @Html.TextBoxFor(model => model.NDCData.NDCQuantity, new { @style = "width:40px;" })
        @*<input type="text" style="width:40px" id="CTP04_NationalDrugUnitCount0" name="Claims_Professional.ServiceLine_Professional_837[0].CTP04_NationalDrugUnitCount" ng-model="lines.CTP04_NationalDrugUnitCount" class="ng-pristine ng-untouched ng-valid">&nbsp;&nbsp;*@

        <i>NDCQtyQual:</i>
        @*<select id="Claims_Professional.ServiceLine_Professional_837[0].CTP05_01_UnitMeasurementCode" name="Claims_Professional.ServiceLine_Professional_837[0].CTP05_01_UnitMeasurementCode" ng-model="lines.CTP05_01_UnitMeasurementCode" class="ng-pristine ng-untouched ng-valid">
                <option value=""></option>
                <option value="F2">F2</option>
                <option value="GR">GR</option>
                <option value="ML">ML</option>
                <option value="UN">UN</option>
                <option value="ME">ME</option>

            </select>*@&nbsp;&nbsp;&nbsp;
        @Html.TextBoxFor(model => model.NDCData.LineNoteId, new { @style = "width:40px;" })
        @Html.TextBoxFor(model => model.NDCData.LineNoteId, new { @style = "width:40px;" })
        @*<input type="text" class="input-sm" id="Claims_Professional.ServiceLine_Professional_837[0].NM108_RenderingProviderIDQlfr" name="Claims_Professional.ServiceLine_Professional_837[0].NM108_RenderingProviderIDQlfr">*@&nbsp;&nbsp;
        @*<input type="text" class="input-l" id="Claims_Professional.ServiceLine_Professional_837[0].PRV_RenderingProviderStateLicenseId" name="Claims_Professional.ServiceLine_Professional_837[0].PRV_RenderingProviderStateLicenseId">&nbsp;*@

    </td>
    <td></td>
    <td></td>
</tr>
<tr>
    <td>
        @Html.PratianUiDatePickerFor(model => model.CodedEncounter.Encounter.DateOf_From, new { @class = "form-control input-xs non_mandatory_field_halo" })
        @Html.ValidationMessageFor(model => model.CodedEncounter.Encounter.DateOf_From)
    </td>
    <td>
        @Html.PratianUiDatePickerFor(model => model.CodedEncounter.Encounter.DateOf_To, new { @class = "form-control input-xs non_mandatory_field_halo" })
        @Html.ValidationMessageFor(model => model.CodedEncounter.Encounter.DateOf_To)
    </td>
    <td>
        @Html.TextBoxFor(model => model.CodedEncounter.Encounter.PlaceOf, new { @class = "form-control input-xs non_mandatory_field_halo" })
        @Html.ValidationMessageFor(model => model.CodedEncounter.Encounter.PlaceOf)
    </td>
    <td>
        @*@Html.TextBoxFor(model => item.EMG, new { @class = "form-control input-xs non_mandatory_field_halo" })
            @Html.ValidationMessageFor(model => item.EMG)*@
    </td>
    <td>
        @Html.TextBoxFor(model => model.Code, new { @class = "form-control input-xs non_mandatory_field_halo" })
        @Html.ValidationMessageFor(model => model.Code)
    </td>
    <td>
        @Html.TextBoxFor(model => model.Modifier1, new { @class = "form-control input-xs non_mandatory_field_halo" })
        @Html.ValidationMessageFor(model => model.Modifier1)
    </td>
    <td>
        @Html.TextBoxFor(model => model.Modifier2, new { @class = "form-control input-xs non_mandatory_field_halo" })
        @Html.ValidationMessageFor(model => model.Modifier2)
    </td>
    <td>
        @Html.TextBoxFor(model => model.Modifier3, new { @class = "form-control input-xs non_mandatory_field_halo" })
        @Html.ValidationMessageFor(model => model.Modifier3)
    </td>
    <td>
        @Html.TextBoxFor(model => model.Modifier4, new { @class = "form-control input-xs non_mandatory_field_halo" })
        @Html.ValidationMessageFor(model => model.Modifier4)
    </td>
    <td>
        @Html.TextBoxFor(model => model.DiagnosisPointers[0], new { @class = "form-control input-xs non_mandatory_field_halo" })
        @Html.ValidationMessageFor(model => model.DiagnosisPointers[0])
    </td>
    <td>
        @Html.TextBoxFor(model => model.DiagnosisPointers[1], new { @class = "form-control input-xs non_mandatory_field_halo" })
        @Html.ValidationMessageFor(model => model.DiagnosisPointers[1])
    </td>
    <td>
        @Html.TextBoxFor(model => model.DiagnosisPointers[2], new { @class = "form-control input-xs non_mandatory_field_halo" })
        @Html.ValidationMessageFor(model => model.DiagnosisPointers[2])
    </td>
    <td>
        @Html.TextBoxFor(model => model.DiagnosisPointers[3], new { @class = "form-control input-xs non_mandatory_field_halo" })
        @Html.ValidationMessageFor(model => model.DiagnosisPointers[4])
    </td>
    @*@for (int j = 0; j < Model.DiagnosisPointers.Count; j++)
    {
        <td>
            @Html.TextBoxFor(model => model.DiagnosisPointers[j], new { @class = "form-control input-xs non_mandatory_field_halo" })
            @Html.ValidationMessageFor(model => model.DiagnosisPointers[j])
        </td>
    }*@
    <td>
        @Html.TextBoxFor(model => model.Amount, new { @class = "form-control input-xs non_mandatory_field_halo UnitCharges",@type="number" })
        @Html.ValidationMessageFor(model => model.Amount)
    </td>
    <td>
        @Html.TextBoxFor(model => model.Units, new { @class = "form-control input-xs non_mandatory_field_halo UnitCharges",@type = "number" })
        @Html.ValidationMessageFor(model => model.Units)
    </td>
    <td>
        <input type="text" name="" disabled class="form-control input-xs non_mandatory_field_halo UnitChargesValues" />
    </td>
    <td>
        @*@Html.TextBoxFor(model => item.EPSDT, new { @class = "form-control input-xs non_mandatory_field_halo" })
            @Html.ValidationMessageFor(model => item.EPSDT)*@
    </td>
    <td>
        NPI
    </td>
    <td>
        @*@Html.TextBoxFor(model => model.CodedEncounter.Encounter.EncounteredSchedule.Schedule.RenderingProvider.NPI, new { @class = "form-control input-xs non_mandatory_field_halo" })
            @Html.ValidationMessageFor(model => model.CodedEncounter.Encounter.EncounteredSchedule.Schedule.RenderingProvider.NPI)*@
    </td>
</tr>


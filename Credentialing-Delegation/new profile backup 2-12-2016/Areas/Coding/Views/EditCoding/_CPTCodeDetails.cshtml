@model PortalTemplate.Areas.Coding.Models.CreateCoding.CPTCodeDetailsViewModel

<p-link filepath="~/Areas/Coding/Contents/CSS/AppCss/EditCoding/NonMinified/CPTCodeDetails.css" rel="stylesheet"></p-link>
<div class="row CPTCodeMainpanel">
    <div class="col-lg-12">

        @***************ACTIVE PROCEDURE BUTTON TO MAKE VISIBLE AND NONVISIBLE OF ICD HISTORY*******************@
        <div class="row margin-top-bottom">
            <div class="col-lg-12">
                <button type="button" class="pull-right btn btn-xs btn-info ActiveCPTCodes_Edit">Active Procedure Codes</button>
            </div>
        </div>

        @***************CPT HISTORY TABLE(HIDDEN BY DEFAULT, ONLY SHOWN ON DEMAND BY USER)********************@
        <div class="row" hidden id="CPTCodeHistory_Edit"></div>

        @***************CPT DATA TABLE(CAPTURES THE CPT INFORMATION)********************@
        <div class="row CPTmainTable">
            <div class="col-lg-12">
                <table class="table table-striped table-hover table-responsive custom-thead-back custom-thead-font custom-tbody custom-table-striped">
                    <thead class="theme_thead">
                        <tr>
                            <th>Code </th>
                            <th>Description </th>
                            <th>Modifier</th>
                            <th>Diagnosis Pointers</th>
                            <th>Fee </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="CPTTablebody_Edit">
                        @{
                            for (var i = 0; i < Model.CPTCodes.Count; i++)
                            {
                                if (Model.CPTCodes[i].isEnM)
                                {
                                    <tr>
                                        <td>
                                            @Html.PratianUISearchInputDropDown(model => model.CPTCodes[i].Code, "/CodingMasterData/GetCPTCodesMasterData", "Code", "Code", new { @class = "form-control input-xs text-uppercase EnMCode_width", @onchange = "checkenmcode(this)" })
                                            @*@Html.PratianUiDropDownListFor(model => model.CPTCodes[i].Code,"/CodingMasterData/GetCPTCodesMasterData",1,"100%","placeholder","500","Code","Code", new { @class = "form-control input-xs text-uppercase EnMCode_width" })*@
                                            @Html.ValidationMessageFor(m => m.CPTCodes[i].Code)
                                            <span class="charge badge" style="background-color: #0288d1;">E&M</span>
                                            <span class="displayNone field-validation-error">Please Enter CPT Code</span>
                                        </td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td>
                                            <label class="CPTdollar_label">$</label>
                                            @Html.TextBoxFor(model => model.CPTCodes[i].Fee, new { @class = "form-control input-xs text-uppercase CPTFee_width" })
                                            @Html.ValidationMessageFor(model => model.CPTCodes[i].Fee)
                                        </td>
                                        @if (Model.CPTCodes.Count > 1)
                                        {
                                            <td onclick="RemoveRows(this)"><button type="button" class="btn btn-xs btn-danger"><i class="fa fa fa-minus"></i></button></td>
                                        }
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td>
                                            @Html.PratianUISearchInputDropDown(model => model.CPTCodes[i].Code, "/CodingMasterData/GetCPTCodesMasterData", "Code", "Code", new { @class = "form-control input-xs text-uppercase EnMCode_width", @onchange = "checkenmcode(this)" })
                                            @Html.ValidationMessageFor(m => m.CPTCodes[i].Code)
                                            <span class="displayNone field-validation-error">Please Enter CPT Code</span>
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(model => model.CPTCodes[i].Description, new { @class = "form-control input-xs text-uppercase" })
                                            @Html.ValidationMessageFor(model => model.CPTCodes[i].Description)  
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(model => model.CPTCodes[i].Modifier1, new { @class = "form-control input-xs text-uppercase modifier_width" })
                                            @Html.TextBoxFor(model => model.CPTCodes[i].Modifier2, new { @class = "form-control input-xs text-uppercase modifier_width" })
                                            @Html.TextBoxFor(model => model.CPTCodes[i].Modifier3, new { @class = "form-control input-xs text-uppercase modifier_width" })
                                            @Html.TextBoxFor(model => model.CPTCodes[i].Modifier4, new { @class = "form-control input-xs text-uppercase modifier_width" })

                                        </td>
                                        <td>
                                            @Html.TextBoxFor(model => model.CPTCodes[i].DiagnosisPointer1, new { @class = "form-control input-xs text-uppercase Diapointer_width" })
                                            @Html.TextBoxFor(model => model.CPTCodes[i].DiagnosisPointer2, new { @class = "form-control input-xs text-uppercase Diapointer_width" })
                                            @Html.TextBoxFor(model => model.CPTCodes[i].DiagnosisPointer3, new { @class = "form-control input-xs text-uppercase Diapointer_width" })
                                            @Html.TextBoxFor(model => model.CPTCodes[i].DiagnosisPointer4, new { @class = "form-control input-xs text-uppercase Diapointer_width" })
                                            <a onclick="addDP(this)" class="btn btn-xs openDiagnosisModal"><i class=" fa fa-forward"></i></a>
                                        </td>
                                        <td>

                                            @Html.TextBoxFor(model => model.CPTCodes[i].Fee, new { @class = "form-control input-xs text-uppercase CPTFee_width" })
                                            @Html.ValidationMessageFor(model => model.CPTCodes[i].Fee)
                                            <label class="CPTdollar_label">$</label>
                                        </td>
                                        @if (Model.CPTCodes.Count > 1)
                                        {
                                            <td onclick="RemoveRows(this)"><button type="button" class="btn btn-xs btn-danger"><i class="fa fa fa-minus"></i></button></td>
                                        }
                                    </tr>
                                }
                            }
                        }

                    </tbody>
                </table>
                <button type="button" class="light-green-button pull-right" id="AddNewCPTRow_Edit"><i class="fa fa-plus"></i></button>
            </div>
        </div>
    </div>
</div>

<p-script filepath="~/Areas/Coding/Scripts/AppJs/EditCoding/NonMinified/CPTCodeDetails.js"></p-script>


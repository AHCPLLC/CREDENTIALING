@model PortalTemplate.Areas.Coding.Models.CreateCoding.ICDCodeHistoryDetailsViewModel
@*<p-link filapath="~/Areas/Coding/Contents/CSS/AppCss/ICDHistory/NonMinified/ICDHistory.css" rel="stylesheet"></p-link>*@

<fieldset class="fieldsetStyle">
    <legend class="legendstyle">Member Active Diagnosis Codes</legend>
    <div class="row">
        <div class="col-lg-12">
            <div class="col-lg-3 pull-left">
            </div>
            <div class="col-lg-9 pull-right">
                <div class="col-lg-1 pull-right">
                    <span class="custombadge outertabclose outertabclose-red closeDiagnosisHistory pull-right"><i class="fa fa-times"></i></span>
                </div>
                <div class=" col-lg-2 col-md-4 col-sm-6 col-xs-12 pull-right">
                    <button type="button" class="btn btn-xs btn-primary margin_left_12px" id="member_search_btnCCM">Search</button>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 zero-padding-left-right pull-right">
                    <input type="text" class="form-control input-xs " placeholder="Search By ICD Code/Description" name="icdCodeDescription">
                </div>
            </div>
        </div>
    </div>
    <div class="row" id="icdcodehistory">
        <div class="col-lg-12 zero-padding-left-right">
            <table class="table table-striped table-hover table-responsive custom-thead-back custom-thead-font custom-tbody custom-table-striped">
                <thead class="theme_thead">
                    <tr>
                        <th></th>
                        <th>Code</th>
                        <th>Description </th>
                        <th>HCC Code</th>
                        <th>HCC Type</th>
                        <th>HCC Version</th>
                        <th>HCC Description </th>
                        <th>HCC Weight</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        @functions{
                            string setBadgecolor(int count)
                            {
                                string[] chronicStyle = new string[] { "ChronicCount_zero", "ChronicCount_one", "ChronicCount_two" };
                                return chronicStyle[count] + ' ' + "charge badge";
                            }
                            string setchronicmessage(int count)
                            {
                                string[] chronicmessage = new string[] { "Please submit this Chronic Disease to Plan.", "Please submit this Chronic Disease again as it is submitted only once to Plan in this Year.", "This Chronic Disease is successfully submitted twice to Plan in this Year." };
                                return chronicmessage[count];
                            }
                            //string praseDatatojson()
                            //{
                            //    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
                            //    var json = serializer.Serialize(Model);
                            //    return json;
                            //}                         
                        }
                         for (var i = 0; i < Model.ICDCodesHistory.Count; i++)
                        {
                            var RowSpan = Model.ICDCodesHistory[i].HCCCodes.Count;
                            <tr>
                                <td rowspan="@RowSpan">
                                    <input class="normal-checkbox activeIcdCode" name="ActiveIcdCode" type="checkbox" ><label><span></span></label>
                                </td>
                                <td rowspan="@RowSpan">
                                    @if (Model.ICDCodesHistory[i].IsChronic)
                                    {
                                        @Model.ICDCodesHistory[i].ICDCode
                                        @Html.HiddenFor(m => m.ICDCodesHistory[i].ICDCode)
                                        <span class="@setBadgecolor(Model.ICDCodesHistory[i].ChronicCount)" data-toggle="tooltip" title="@setchronicmessage(Model.ICDCodesHistory[i].ChronicCount)" data-placement="top">@Model.ICDCodesHistory[i].ChronicCount</span>
                                    }
                                    else
                                    {
                                        @Model.ICDCodesHistory[i].ICDCode
                                        @Html.HiddenFor(m => m.ICDCodesHistory[i].ICDCode)
                                    }
                                </td>
                                <td rowspan="@RowSpan">
                                    @Model.ICDCodesHistory[i].Description
                                    @Html.HiddenFor(m => m.ICDCodesHistory[i].Description)
                                </td>
                                <td>
                                    @Model.ICDCodesHistory[i].HCCCodes[0].Code
                                    @Html.HiddenFor(m => m.ICDCodesHistory[i].HCCCodes[0].Code)
                                </td>
                                <td>
                                    @Model.ICDCodesHistory[i].HCCCodes[0].Type
                                    @Html.HiddenFor(m => m.ICDCodesHistory[i].HCCCodes[0].Type)
                                </td>
                                <td>
                                    @Model.ICDCodesHistory[i].HCCCodes[0].Version
                                    @Html.HiddenFor(m => m.ICDCodesHistory[i].HCCCodes[0].Version)
                                </td>
                                <td>
                                    @Model.ICDCodesHistory[i].HCCCodes[0].Description
                                    @Html.HiddenFor(m => m.ICDCodesHistory[i].HCCCodes[0].Description)
                                </td>
                                <td>
                                    @Model.ICDCodesHistory[i].HCCCodes[0].Weight
                                    @Html.HiddenFor(m => m.ICDCodesHistory[i].HCCCodes[0].Weight)
                                </td>
                                <td></td>
                            </tr>
                            for (var j = 1; j < Model.ICDCodesHistory[i].HCCCodes.Count; j++)
                            {
                                <tr>
                                    <td>
                                        @Model.ICDCodesHistory[i].HCCCodes[0].Code
                                        @Html.HiddenFor(m => m.ICDCodesHistory[i].HCCCodes[0].Code)
                                    </td>
                                    <td>
                                        @Model.ICDCodesHistory[i].HCCCodes[0].Type
                                        @Html.HiddenFor(m => m.ICDCodesHistory[i].HCCCodes[0].Type)
                                    </td>
                                    <td>
                                        @Model.ICDCodesHistory[i].HCCCodes[0].Version
                                        @Html.HiddenFor(m => m.ICDCodesHistory[i].HCCCodes[0].Version)
                                    </td>
                                    <td>
                                        @Model.ICDCodesHistory[i].HCCCodes[0].Description
                                        @Html.HiddenFor(m => m.ICDCodesHistory[i].HCCCodes[0].Description)
                                    </td>
                                    <td>
                                        @Model.ICDCodesHistory[i].HCCCodes[0].Weight
                                        @Html.HiddenFor(m => m.ICDCodesHistory[i].HCCCodes[0].Weight)
                                    </td>
                                    <td></td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</fieldset>

@*<p-script filepath="~/Areas/Coding/Scripts/AppJs/ICDHistory/_ICDHistory.js"></p-script>*@
@model PortalTemplate.Areas.UM.Models.ViewModels.Authorization.AuthorizationViewModel
@{ PortalTemplate.Areas.UM.Models.ViewModels.Authorization.MemberViewModel memberData = @ViewBag.MemberData;}
@{
    if (@Model != null && @Model.RequestingProvider != null)
    {
        @Html.HiddenFor(m => m.RequestingProvider.ProviderID, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.ProviderID })
@Html.HiddenFor(m => m.RequestingProvider.NPI, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.NPI })
@Html.HiddenFor(m => m.RequestingProvider.Name, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.Name })
@Html.HiddenFor(m => m.RequestingProvider.FirstName, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.FirstName })
@Html.HiddenFor(m => m.RequestingProvider.MiddleName, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.MiddleName })
@Html.HiddenFor(m => m.RequestingProvider.LastName, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.LastName })
@Html.HiddenFor(m => m.RequestingProvider.FullName, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.FullName })
@Html.HiddenFor(m => m.RequestingProvider.PhoneNumber, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.PhoneNumber })
@Html.HiddenFor(m => m.RequestingProvider.FaxNumber, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.FaxNumber })
@Html.HiddenFor(m => m.RequestingProvider.Address1, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.Address1 })
@Html.HiddenFor(m => m.RequestingProvider.Address2, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.Address2 })
@Html.HiddenFor(m => m.RequestingProvider.City, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.City })
@Html.HiddenFor(m => m.RequestingProvider.State, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.State })
@Html.HiddenFor(m => m.RequestingProvider.ZipCode, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.ZipCode })
@Html.HiddenFor(m => m.RequestingProvider.TaxID, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.TaxID })
@Html.HiddenFor(m => m.RequestingProvider.Specialty, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.Specialty })
@Html.HiddenFor(m => m.RequestingProvider.ContactName, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.ContactName })
@Html.HiddenFor(m => m.RequestingProvider.ProviderType, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.ProviderType })
@Html.HiddenFor(m => m.RequestingProvider.ProviderStatus, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.ProviderStatus })
@Html.HiddenFor(m => m.RequestingProvider.PlanName, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.PlanName })
@Html.HiddenFor(m => m.RequestingProvider.PhysicianGroupName, new { @class = "form-control .input-xs ", Value = @Model.RequestingProvider.PhysicianGroupName })
@Html.HiddenFor(m => m.RequestingProvider.ProviderMode, new { @class = "form-control .input-xs ", Value = "RequestingProvider" })
    }
    else
    {
  @Html.HiddenFor(m => m.RequestingProvider.ProviderID, new { @class = "form-control .input-xs ", Value = memberData.PCP.ProviderID })
@Html.HiddenFor(m => m.RequestingProvider.NPI, new { @class = "form-control .input-xs ", Value = memberData.PCP.NPI })
@Html.HiddenFor(m => m.RequestingProvider.Name, new { @class = "form-control .input-xs ", Value = memberData.PCP.Name })
@Html.HiddenFor(m => m.RequestingProvider.FirstName, new { @class = "form-control .input-xs ", Value = memberData.PCP.FirstName })
@Html.HiddenFor(m => m.RequestingProvider.MiddleName, new { @class = "form-control .input-xs ", Value = memberData.PCP.MiddleName })
@Html.HiddenFor(m => m.RequestingProvider.LastName, new { @class = "form-control .input-xs ", Value = memberData.PCP.LastName })
@Html.HiddenFor(m => m.RequestingProvider.FullName, new { @class = "form-control .input-xs ", Value = memberData.PCP.FullName })
@Html.HiddenFor(m => m.RequestingProvider.PhoneNumber, new { @class = "form-control .input-xs ", Value = memberData.PCP.PhoneNumber })
@Html.HiddenFor(m => m.RequestingProvider.FaxNumber, new { @class = "form-control .input-xs ", Value = memberData.PCP.FaxNumber })
@Html.HiddenFor(m => m.RequestingProvider.Address1, new { @class = "form-control .input-xs ", Value = memberData.PCP.Address1 })
@Html.HiddenFor(m => m.RequestingProvider.Address2, new { @class = "form-control .input-xs ", Value = memberData.PCP.Address2 })
@Html.HiddenFor(m => m.RequestingProvider.City, new { @class = "form-control .input-xs ", Value = memberData.PCP.City })
@Html.HiddenFor(m => m.RequestingProvider.State, new { @class = "form-control .input-xs ", Value = memberData.PCP.State })
@Html.HiddenFor(m => m.RequestingProvider.ZipCode, new { @class = "form-control .input-xs ", Value = memberData.PCP.ZipCode })
@Html.HiddenFor(m => m.RequestingProvider.TaxID, new { @class = "form-control .input-xs ", Value = memberData.PCP.TaxID })
@Html.HiddenFor(m => m.RequestingProvider.Specialty, new { @class = "form-control .input-xs ", Value = memberData.PCP.Specialty })
@Html.HiddenFor(m => m.RequestingProvider.ContactName, new { @class = "form-control .input-xs ", Value = memberData.PCP.ContactName })
@Html.HiddenFor(m => m.RequestingProvider.ProviderType, new { @class = "form-control .input-xs ", Value = memberData.PCP.ProviderType })
@Html.HiddenFor(m => m.RequestingProvider.ProviderStatus, new { @class = "form-control .input-xs ", Value = memberData.PCP.ProviderStatus })
@Html.HiddenFor(m => m.RequestingProvider.PlanName, new { @class = "form-control .input-xs ", Value = memberData.PCP.PlanName })
@Html.HiddenFor(m => m.RequestingProvider.PhysicianGroupName, new { @class = "form-control .input-xs ", Value = memberData.PCP.PhysicianGroupName })
@Html.HiddenFor(m => m.RequestingProvider.ProviderMode, new { @class = "form-control .input-xs ", Value = "RequestingProvider" })
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PortalTemplate.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntitySummary", Namespace="http://schemas.datacontract.org/2004/07/AHC.DataService.MDM.Common.Entities")]
    [System.SerializableAttribute()]
    public partial class EntitySummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InActiveCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActiveCount {
            get {
                return this.ActiveCountField;
            }
            set {
                if ((this.ActiveCountField.Equals(value) != true)) {
                    this.ActiveCountField = value;
                    this.RaisePropertyChanged("ActiveCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InActiveCount {
            get {
                return this.InActiveCountField;
            }
            set {
                if ((this.InActiveCountField.Equals(value) != true)) {
                    this.InActiveCountField = value;
                    this.RaisePropertyChanged("InActiveCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IGetAllEnitites")]
    public interface IGetAllEnitites {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetAllEnitites/GetAllEntitiesSummary", ReplyAction="http://tempuri.org/IGetAllEnitites/GetAllEntitiesSummaryResponse")]
        PortalTemplate.ServiceReference2.EntitySummary[] GetAllEntitiesSummary();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetAllEnitites/GetAllEntitiesSummary", ReplyAction="http://tempuri.org/IGetAllEnitites/GetAllEntitiesSummaryResponse")]
        System.Threading.Tasks.Task<PortalTemplate.ServiceReference2.EntitySummary[]> GetAllEntitiesSummaryAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetAllEnititesChannel : PortalTemplate.ServiceReference2.IGetAllEnitites, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllEnititesClient : System.ServiceModel.ClientBase<PortalTemplate.ServiceReference2.IGetAllEnitites>, PortalTemplate.ServiceReference2.IGetAllEnitites {
        
        public GetAllEnititesClient() {
        }
        
        public GetAllEnititesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetAllEnititesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetAllEnititesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetAllEnititesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PortalTemplate.ServiceReference2.EntitySummary[] GetAllEntitiesSummary() {
            return base.Channel.GetAllEntitiesSummary();
        }
        
        public System.Threading.Tasks.Task<PortalTemplate.ServiceReference2.EntitySummary[]> GetAllEntitiesSummaryAsync() {
            return base.Channel.GetAllEntitiesSummaryAsync();
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PortalTemplate.ServiceReference3 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileDetails", Namespace="http://schemas.datacontract.org/2004/07/MIRRA.Claims.BillingGateway.Facade.Servic" +
        "e")]
    [System.SerializableAttribute()]
    public partial class FileDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeInDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ControlNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfCreationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IncomeFileLoggerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgeInDays {
            get {
                return this.AgeInDaysField;
            }
            set {
                if ((this.AgeInDaysField.Equals(value) != true)) {
                    this.AgeInDaysField = value;
                    this.RaisePropertyChanged("AgeInDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ControlNumber {
            get {
                return this.ControlNumberField;
            }
            set {
                if ((this.ControlNumberField.Equals(value) != true)) {
                    this.ControlNumberField = value;
                    this.RaisePropertyChanged("ControlNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfCreation {
            get {
                return this.DateOfCreationField;
            }
            set {
                if ((this.DateOfCreationField.Equals(value) != true)) {
                    this.DateOfCreationField = value;
                    this.RaisePropertyChanged("DateOfCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IncomeFileLoggerID {
            get {
                return this.IncomeFileLoggerIDField;
            }
            set {
                if ((this.IncomeFileLoggerIDField.Equals(value) != true)) {
                    this.IncomeFileLoggerIDField = value;
                    this.RaisePropertyChanged("IncomeFileLoggerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference3.IBillingBusinessServiceFacade")]
    public interface IBillingBusinessServiceFacade {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetFileList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetFileListResponse")]
        PortalTemplate.ServiceReference3.FileDetails[] GetFileList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetFileList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetFileListResponse")]
        System.Threading.Tasks.Task<PortalTemplate.ServiceReference3.FileDetails[]> GetFileListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetOpenClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetOpenClaimsListResponse")]
        string GetOpenClaimsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetOpenClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetOpenClaimsListResponse")]
        System.Threading.Tasks.Task<string> GetOpenClaimsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetOnHoldClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetOnHoldClaimsListResponse")]
        string GetOnHoldClaimsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetOnHoldClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetOnHoldClaimsListResponse")]
        System.Threading.Tasks.Task<string> GetOnHoldClaimsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetRejectedClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetRejectedClaimsListResponse")]
        string GetRejectedClaimsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetRejectedClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetRejectedClaimsListResponse")]
        System.Threading.Tasks.Task<string> GetRejectedClaimsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetAcceptedClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetAcceptedClaimsListResponse")]
        string GetAcceptedClaimsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetAcceptedClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetAcceptedClaimsListResponse")]
        System.Threading.Tasks.Task<string> GetAcceptedClaimsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetDispatchedClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetDispatchedClaimsListResponse")]
        string GetDispatchedClaimsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetDispatchedClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetDispatchedClaimsListResponse")]
        System.Threading.Tasks.Task<string> GetDispatchedClaimsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetUnAckByCHClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetUnAckByCHClaimsListResponse")]
        string GetUnAckByCHClaimsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetUnAckByCHClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetUnAckByCHClaimsListResponse")]
        System.Threading.Tasks.Task<string> GetUnAckByCHClaimsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetRejectedByCHClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetRejectedByCHClaimsListRespons" +
            "e")]
        string GetRejectedByCHClaimsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetRejectedByCHClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetRejectedByCHClaimsListRespons" +
            "e")]
        System.Threading.Tasks.Task<string> GetRejectedByCHClaimsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetAcceptedByCHClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetAcceptedByCHClaimsListRespons" +
            "e")]
        string GetAcceptedByCHClaimsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetAcceptedByCHClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetAcceptedByCHClaimsListRespons" +
            "e")]
        System.Threading.Tasks.Task<string> GetAcceptedByCHClaimsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetUnackByPayerClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetUnackByPayerClaimsListRespons" +
            "e")]
        string GetUnackByPayerClaimsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetUnackByPayerClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetUnackByPayerClaimsListRespons" +
            "e")]
        System.Threading.Tasks.Task<string> GetUnackByPayerClaimsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetRejectedByPayerClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetRejectedByPayerClaimsListResp" +
            "onse")]
        string GetRejectedByPayerClaimsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetRejectedByPayerClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetRejectedByPayerClaimsListResp" +
            "onse")]
        System.Threading.Tasks.Task<string> GetRejectedByPayerClaimsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetAcceptedByPayerClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetAcceptedByPayerClaimsListResp" +
            "onse")]
        string GetAcceptedByPayerClaimsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetAcceptedByPayerClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetAcceptedByPayerClaimsListResp" +
            "onse")]
        System.Threading.Tasks.Task<string> GetAcceptedByPayerClaimsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetPendingClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetPendingClaimsListResponse")]
        string GetPendingClaimsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetPendingClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetPendingClaimsListResponse")]
        System.Threading.Tasks.Task<string> GetPendingClaimsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetDeniedByPayerClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetDeniedByPayerClaimsListRespon" +
            "se")]
        string GetDeniedByPayerClaimsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetDeniedByPayerClaimsList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetDeniedByPayerClaimsListRespon" +
            "se")]
        System.Threading.Tasks.Task<string> GetDeniedByPayerClaimsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/Generate837EDIFile", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/Generate837EDIFileResponse")]
        string Generate837EDIFile(string[] ClaimsIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/Generate837EDIFile", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/Generate837EDIFileResponse")]
        System.Threading.Tasks.Task<string> Generate837EDIFileAsync(string[] ClaimsIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/Generate835EDIFile", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/Generate835EDIFileResponse")]
        string Generate835EDIFile(string[] ProviderIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/Generate835EDIFile", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/Generate835EDIFileResponse")]
        System.Threading.Tasks.Task<string> Generate835EDIFileAsync(string[] ProviderIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/Get835FileList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/Get835FileListResponse")]
        string Get835FileList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/Get835FileList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/Get835FileListResponse")]
        System.Threading.Tasks.Task<string> Get835FileListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/Get277FileList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/Get277FileListResponse")]
        string Get277FileList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/Get277FileList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/Get277FileListResponse")]
        System.Threading.Tasks.Task<string> Get277FileListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/Get999FileList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/Get999FileListResponse")]
        string Get999FileList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/Get999FileList", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/Get999FileListResponse")]
        System.Threading.Tasks.Task<string> Get999FileListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/UploadEDIFile", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/UploadEDIFileResponse")]
        string UploadEDIFile();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/UploadEDIFile", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/UploadEDIFileResponse")]
        System.Threading.Tasks.Task<string> UploadEDIFileAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetEOBReport", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetEOBReportResponse")]
        string GetEOBReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingBusinessServiceFacade/GetEOBReport", ReplyAction="http://tempuri.org/IBillingBusinessServiceFacade/GetEOBReportResponse")]
        System.Threading.Tasks.Task<string> GetEOBReportAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBillingBusinessServiceFacadeChannel : PortalTemplate.ServiceReference3.IBillingBusinessServiceFacade, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BillingBusinessServiceFacadeClient : System.ServiceModel.ClientBase<PortalTemplate.ServiceReference3.IBillingBusinessServiceFacade>, PortalTemplate.ServiceReference3.IBillingBusinessServiceFacade {
        
        public BillingBusinessServiceFacadeClient() {
        }
        
        public BillingBusinessServiceFacadeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BillingBusinessServiceFacadeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BillingBusinessServiceFacadeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BillingBusinessServiceFacadeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PortalTemplate.ServiceReference3.FileDetails[] GetFileList() {
            return base.Channel.GetFileList();
        }
        
        public System.Threading.Tasks.Task<PortalTemplate.ServiceReference3.FileDetails[]> GetFileListAsync() {
            return base.Channel.GetFileListAsync();
        }
        
        public string GetOpenClaimsList() {
            return base.Channel.GetOpenClaimsList();
        }
        
        public System.Threading.Tasks.Task<string> GetOpenClaimsListAsync() {
            return base.Channel.GetOpenClaimsListAsync();
        }
        
        public string GetOnHoldClaimsList() {
            return base.Channel.GetOnHoldClaimsList();
        }
        
        public System.Threading.Tasks.Task<string> GetOnHoldClaimsListAsync() {
            return base.Channel.GetOnHoldClaimsListAsync();
        }
        
        public string GetRejectedClaimsList() {
            return base.Channel.GetRejectedClaimsList();
        }
        
        public System.Threading.Tasks.Task<string> GetRejectedClaimsListAsync() {
            return base.Channel.GetRejectedClaimsListAsync();
        }
        
        public string GetAcceptedClaimsList() {
            return base.Channel.GetAcceptedClaimsList();
        }
        
        public System.Threading.Tasks.Task<string> GetAcceptedClaimsListAsync() {
            return base.Channel.GetAcceptedClaimsListAsync();
        }
        
        public string GetDispatchedClaimsList() {
            return base.Channel.GetDispatchedClaimsList();
        }
        
        public System.Threading.Tasks.Task<string> GetDispatchedClaimsListAsync() {
            return base.Channel.GetDispatchedClaimsListAsync();
        }
        
        public string GetUnAckByCHClaimsList() {
            return base.Channel.GetUnAckByCHClaimsList();
        }
        
        public System.Threading.Tasks.Task<string> GetUnAckByCHClaimsListAsync() {
            return base.Channel.GetUnAckByCHClaimsListAsync();
        }
        
        public string GetRejectedByCHClaimsList() {
            return base.Channel.GetRejectedByCHClaimsList();
        }
        
        public System.Threading.Tasks.Task<string> GetRejectedByCHClaimsListAsync() {
            return base.Channel.GetRejectedByCHClaimsListAsync();
        }
        
        public string GetAcceptedByCHClaimsList() {
            return base.Channel.GetAcceptedByCHClaimsList();
        }
        
        public System.Threading.Tasks.Task<string> GetAcceptedByCHClaimsListAsync() {
            return base.Channel.GetAcceptedByCHClaimsListAsync();
        }
        
        public string GetUnackByPayerClaimsList() {
            return base.Channel.GetUnackByPayerClaimsList();
        }
        
        public System.Threading.Tasks.Task<string> GetUnackByPayerClaimsListAsync() {
            return base.Channel.GetUnackByPayerClaimsListAsync();
        }
        
        public string GetRejectedByPayerClaimsList() {
            return base.Channel.GetRejectedByPayerClaimsList();
        }
        
        public System.Threading.Tasks.Task<string> GetRejectedByPayerClaimsListAsync() {
            return base.Channel.GetRejectedByPayerClaimsListAsync();
        }
        
        public string GetAcceptedByPayerClaimsList() {
            return base.Channel.GetAcceptedByPayerClaimsList();
        }
        
        public System.Threading.Tasks.Task<string> GetAcceptedByPayerClaimsListAsync() {
            return base.Channel.GetAcceptedByPayerClaimsListAsync();
        }
        
        public string GetPendingClaimsList() {
            return base.Channel.GetPendingClaimsList();
        }
        
        public System.Threading.Tasks.Task<string> GetPendingClaimsListAsync() {
            return base.Channel.GetPendingClaimsListAsync();
        }
        
        public string GetDeniedByPayerClaimsList() {
            return base.Channel.GetDeniedByPayerClaimsList();
        }
        
        public System.Threading.Tasks.Task<string> GetDeniedByPayerClaimsListAsync() {
            return base.Channel.GetDeniedByPayerClaimsListAsync();
        }
        
        public string Generate837EDIFile(string[] ClaimsIDs) {
            return base.Channel.Generate837EDIFile(ClaimsIDs);
        }
        
        public System.Threading.Tasks.Task<string> Generate837EDIFileAsync(string[] ClaimsIDs) {
            return base.Channel.Generate837EDIFileAsync(ClaimsIDs);
        }
        
        public string Generate835EDIFile(string[] ProviderIds) {
            return base.Channel.Generate835EDIFile(ProviderIds);
        }
        
        public System.Threading.Tasks.Task<string> Generate835EDIFileAsync(string[] ProviderIds) {
            return base.Channel.Generate835EDIFileAsync(ProviderIds);
        }
        
        public string Get835FileList() {
            return base.Channel.Get835FileList();
        }
        
        public System.Threading.Tasks.Task<string> Get835FileListAsync() {
            return base.Channel.Get835FileListAsync();
        }
        
        public string Get277FileList() {
            return base.Channel.Get277FileList();
        }
        
        public System.Threading.Tasks.Task<string> Get277FileListAsync() {
            return base.Channel.Get277FileListAsync();
        }
        
        public string Get999FileList() {
            return base.Channel.Get999FileList();
        }
        
        public System.Threading.Tasks.Task<string> Get999FileListAsync() {
            return base.Channel.Get999FileListAsync();
        }
        
        public string UploadEDIFile() {
            return base.Channel.UploadEDIFile();
        }
        
        public System.Threading.Tasks.Task<string> UploadEDIFileAsync() {
            return base.Channel.UploadEDIFileAsync();
        }
        
        public string GetEOBReport() {
            return base.Channel.GetEOBReport();
        }
        
        public System.Threading.Tasks.Task<string> GetEOBReportAsync() {
            return base.Channel.GetEOBReportAsync();
        }
    }
}
